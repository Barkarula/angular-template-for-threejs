var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCamera.html",[0,0.03,1,2.101]],["body/classes/AbstractCamera.html",[0,0.034,1,3.104,2,2.197,3,0.209,4,0.209,5,0.156,6,6.225,7,3.455,8,2.7,9,4.088,10,4.088,11,0.627,12,0.931,13,3.75,14,0.825,15,1.384,16,5.394,17,5.394,18,1.348,19,5.394,20,1.178,21,1.105,22,0.987,23,4.544,24,0.987,25,5.394,26,5.394,27,5.077,28,5.077,29,1.233,30,1.305,31,2.661,32,1.125,33,5.314,34,0.937,35,0.021,36,1.044,37,4.041,38,4.041,39,0.981,40,1.219,41,4.041,42,4.041,43,4.041,44,0.987,45,1.171,46,4.041,47,0.775,48,0.775,49,0.775,50,0.931,51,4.544,52,1.384,53,4.041,54,3.07,55,4.041,56,4.041,57,4.041,58,0.888,59,0.84,60,1.102,61,4.041,62,1.378,63,0.24,64,1.216,65,0.75,66,2.782,67,4.037,68,0.182,69,0.877,70,0.209,71,0.667,72,4.041,73,4.041,74,4.041,75,4.041,76,5.314,77,4.511,78,4.041,79,3.07,80,1.162,81,2.197,82,4.544,83,4.041,84,4.041,85,3.685,86,4.041,87,4.041,88,4.041,89,1.044,90,3.07,91,3.07,92,4.041,93,0.84,94,3.455,95,3.455,96,4.041,97,4.041,98,3.455,99,4.041,100,1.523,101,0.011,102,0.015,103,0.011]],["title/classes/AbstractConnector.html",[0,0.03,104,2.271]],["body/classes/AbstractConnector.html",[0,0.03,2,1.912,3,0.182,4,0.342,5,0.136,11,0.546,12,0.848,14,0.751,15,1.418,18,1.361,20,1.131,21,0.969,22,0.899,24,1.027,31,2.48,32,1.139,34,0.935,35,0.021,36,1.301,39,1.047,40,1.225,44,0.653,45,0.899,47,0.869,48,0.869,49,0.869,50,0.616,60,0.653,63,0.25,64,1.027,65,0.899,68,0.159,69,0.799,70,0.182,71,0.799,93,0.731,101,0.01,102,0.014,103,0.01,104,3.057,105,5.851,106,3.008,107,1.064,108,1.438,109,1.064,110,1.345,111,1.113,112,1.064,113,4.529,114,4.529,115,1.454,116,4.529,117,4.529,118,1.064,119,1.216,120,1.216,121,1.216,122,1.216,123,1.064,124,1.064,125,4.447,126,4.84,127,0.951,128,0.773,129,0.731,130,1.56,131,0.816,132,0.816,133,0.773,134,0.816,135,3.517,136,3.677,137,1.343,138,1.172,139,3.517,140,4.204,141,3.517,142,3.517,143,1.186,144,3.677,145,4.104,146,3.677,147,3.057,148,3.677,149,2.631,150,3.677,151,3.677,152,3.677,153,3.517,154,0.773,155,1.343,156,0.816,157,0.816,158,0.816,159,0.816,160,0.816,161,0.773,162,0.816,163,0.816,164,0.816,165,0.816,166,0.773,167,0.816,168,3.517,169,1.912,170,3.517,171,3.517,172,1.635,173,3.517,174,3.517,175,0.848,176,3.517,177,4.84,178,3.517,179,4.84,180,3.517,181,3.008,182,3.008,183,3.517,184,3.517,185,3.517,186,3.517]],["title/classes/AbstractLazyObject3D.html",[0,0.03,187,1.955]],["body/classes/AbstractLazyObject3D.html",[0,0.045,2,1.787,3,0.17,4,0.17,5,0.127,8,2.346,11,0.51,12,1.014,14,0.899,15,1.446,18,1.325,20,1.108,21,0.935,22,0.857,32,1.128,34,0.906,35,0.021,36,1.049,39,1.037,40,1.22,44,0.61,45,0.857,47,0.844,48,0.844,49,0.844,50,0.576,58,0.722,59,0.683,60,0.991,63,0.241,65,0.857,68,0.148,69,0.762,70,0.17,71,0.542,80,0.945,81,1.787,93,0.683,101,0.009,102,0.013,103,0.009,107,1.015,108,1.432,109,1.015,110,1.325,111,1.185,112,1.015,115,1.427,118,1.015,119,1.427,120,1.173,121,1.173,122,1.173,123,1.015,124,1.015,127,0.908,128,0.722,129,0.683,130,1.543,131,0.763,132,0.763,133,0.722,134,0.763,154,0.722,155,1.435,156,0.763,157,0.763,158,0.763,159,0.763,160,0.763,161,0.722,162,0.763,163,0.763,164,0.763,165,0.763,166,0.722,167,0.763,175,0.576,187,2.51,188,5.038,189,4.131,190,2.263,191,4.055,192,3.371,193,3.371,194,3.852,195,3.656,196,3.147,197,3.656,198,2.07,199,3.287,200,2.916,201,3.371,202,2.698,203,2.916,204,3.287,205,2.916,206,2.916,207,2.698,208,1.239,209,2.916,210,3.656,211,2.916,212,3.994,213,1.787,214,2.916,215,2.916,216,2.916,217,2.916,218,2.916,219,2.811,220,3.287,221,2.916,222,2.916,223,3.287,224,3.287,225,3.287,226,5.79,227,3.287,228,3.287,229,3.287,230,3.287,231,3.287,232,3.287,233,3.287,234,1.92,235,3.287,236,2.811,237,3.287,238,3.287,239,3.287,240,3.287,241,2.076,242,3.287,243,5.338,244,4.618,245,2.811,246,0.722,247,0.722,248,3.287,249,3.287,250,3.287,251,2.811,252,3.287]],["title/classes/AbstractMesh.html",[0,0.03,253,1.714]],["body/classes/AbstractMesh.html",[0,0.03,2,1.908,3,0.182,4,0.182,5,0.136,8,2.456,10,3.806,11,0.545,12,0.847,14,0.75,15,1.418,18,1.171,20,1.234,21,0.968,22,1.106,24,0.897,32,1.142,34,0.946,35,0.021,36,1.087,39,1.041,40,1.224,44,1.026,45,1.199,47,0.941,48,0.941,49,0.941,50,0.968,58,1.309,59,1.238,60,0.897,63,0.269,64,1.199,65,0.897,68,0.158,69,0.798,70,0.182,77,4.2,79,2.667,80,1.902,81,1.908,93,0.73,101,0.01,102,0.014,103,0.01,107,1.062,108,1.418,109,1.062,110,1.269,111,1.065,112,1.062,115,1.215,118,1.062,119,1.215,120,1.215,121,1.215,122,1.215,123,1.062,124,1.062,127,0.95,128,0.771,129,0.73,130,1.559,131,0.815,132,0.815,133,0.771,134,0.815,138,1.374,154,0.771,155,1.342,156,0.815,157,0.815,158,0.815,159,0.815,160,0.815,161,0.771,162,0.815,163,0.815,164,0.815,165,0.815,166,0.771,167,0.815,175,0.847,190,2.417,253,2.304,254,5.918,255,3.238,256,2.628,257,3.238,258,2.635,259,2.478,260,2.516,261,2.478,262,3.005,263,3.511,264,2.628,265,2.809,266,3.511,267,3.002,268,2.456,269,3.002,270,3.511,271,3.511,272,1.822,273,3.511,274,2.628,275,3.511,276,3.002,277,2.417,278,2.667,279,3.511,280,3.002,281,3.002,282,3.511,283,2.667,284,3.511,285,3.511,286,3.511,287,3.511,288,3.511,289,3.511,290,3.511,291,1.908]],["title/classes/AbstractModelLoader.html",[0,0.03,213,1.955]],["body/classes/AbstractModelLoader.html",[0,0.045,2,1.487,3,0.141,4,0.333,5,0.106,11,0.425,12,0.843,14,0.747,15,1.437,18,1.267,20,1.201,21,1.04,22,0.987,24,0.751,32,1.147,34,0.962,35,0.021,36,1.168,39,1.056,40,1.245,44,0.751,45,0.987,47,0.939,48,0.939,49,0.939,50,0.708,58,0.601,59,0.569,60,0.893,63,0.182,64,0.751,65,0.987,68,0.123,70,0.141,71,0.98,93,0.569,101,0.008,102,0.011,103,0.008,107,0.889,108,1.368,109,1.168,110,1.376,111,1.097,112,1.168,115,1.416,118,1.168,119,1.416,120,1.305,121,1.305,122,1.305,123,1.168,124,1.168,127,1.045,128,0.889,129,0.841,130,1.615,131,0.635,132,0.635,133,0.889,134,0.635,143,1.179,154,0.889,155,1.426,156,0.635,157,0.635,158,0.635,159,0.635,160,0.635,161,0.889,162,0.635,163,0.635,164,0.635,165,0.635,166,0.889,167,0.635,175,0.479,187,3.905,189,2.811,192,2.554,193,2.554,194,3.039,195,3.039,196,2.616,197,3.039,198,1.226,200,1.728,201,1.728,202,1.598,203,1.728,205,1.728,206,1.728,207,1.598,208,1.117,209,1.728,210,2.554,211,1.728,212,3.039,213,2.616,214,1.728,215,1.728,216,1.728,217,3.358,218,1.728,221,3.358,222,1.728,234,4.197,241,3.039,246,1.057,272,2.239,292,4.852,293,2.339,294,1.883,295,3.073,296,2.785,297,1.883,298,3.313,299,3.459,300,2.736,301,1.883,302,1.883,303,2.736,304,2.736,305,2.736,306,1.883,307,1.883,308,1.883,309,1.883,310,1.883,311,2.736,312,2.736,313,2.736,314,2.736,315,2.736,316,2.736,317,2.736,318,2.736,319,2.736,320,2.736,321,4.045,322,4.344,323,3.907,324,3.907,325,3.313,326,2.811,327,3.313,328,3.313,329,3.039,330,3.313,331,3.313,332,3.313,333,3.313,334,2.736,335,2.736,336,4.045,337,2.736,338,4.813,339,2.078,340,0.508,341,1.883,342,2.736,343,4.813,344,2.736]],["title/classes/AbstractObject3D.html",[0,0.03,108,0.707]],["body/classes/AbstractObject3D.html",[0,0.025,2,1.583,3,0.151,4,0.151,5,0.113,8,2.151,9,3.435,10,3.435,11,0.452,12,0.742,14,0.657,15,1.373,18,1.077,20,1.147,21,0.959,22,0.786,24,0.786,29,0.983,30,1.096,32,1.123,34,0.966,35,0.021,36,1.194,39,0.97,40,1.205,44,0.786,45,1.017,47,0.799,48,0.799,49,0.799,50,0.874,52,1.339,60,0.926,62,1.519,63,0.191,64,1.164,65,1.081,66,2.004,67,4.422,68,0.131,69,0.699,70,0.151,71,0.904,77,4.162,79,3.217,80,1.218,81,1.583,85,3.661,89,1.094,100,1.097,101,0.008,102,0.012,103,0.008,108,0.832,109,1.204,110,1.287,111,1.213,112,1.204,115,1.204,118,0.93,119,1.204,120,1.204,121,1.204,122,1.204,123,0.93,124,0.93,127,0.832,128,0.93,129,0.88,133,0.93,143,1.037,154,0.93,155,1.361,161,0.93,166,0.93,175,0.742,188,5.512,190,2.004,198,1.898,202,2.473,208,0.983,219,2.49,246,0.93,267,2.49,269,2.49,276,2.49,345,1.494,346,1.494,347,1.36,348,1.494,349,1.494,350,1.36,351,1.29,352,1.29,353,1.29,354,2.911,355,2.911,356,2.911,357,2.911,358,2.911,359,2.911,360,2.911,361,2.911,362,2.911,363,2.911,364,2.911,365,2.911,366,1.154,367,1.154,368,1.154,369,1.037,370,1.154,371,1.094,372,1.094,373,2.911,374,2.911,375,1.154,376,1.154,377,1.154,378,1.154,379,1.154,380,1.154,381,1.154,382,1.154,383,2.911,384,2.911,385,2.911,386,2.911,387,2.911,388,1.154,389,0.137,390,1.037,391,1.154,392,2.911,393,2.911,394,4.989,395,2.911,396,4.234,397,2.911,398,4.234,399,2.911,400,2.911,401,2.911,402,2.911,403,2.911,404,4.234,405,4.234,406,4.234,407,5.478,408,4.234,409,4.234,410,4.234,411,2.911,412,2.911,413,2.911,414,2.911,415,2.911,416,2.911,417,2.911,418,2.911,419,2.911,420,2.911,421,2.911,422,2.911,423,2.911,424,2.911,425,2.911,426,2.911,427,2.911,428,2.911,429,2.911,430,2.911,431,2.911,432,2.911]],["title/modules/AtftCameraModule.html",[433,0.593,434,2.271]],["body/modules/AtftCameraModule.html",[0,0.045,3,0.275,4,0.275,5,0.206,35,0.021,63,0.304,68,0.24,70,0.275,101,0.015,102,0.018,103,0.015,433,0.879,434,4.6,435,1.704,436,1.704,437,0.547,438,2.401,439,1.9,440,0.635,441,2.401,442,4.555,443,4.555,444,4.555,445,1.469,446,2.021,447,1.9,448,1.799,449,5.326,450,5.326,451,2.381,452,2.518,453,2.008,454,1.236,455,5.326,456,1.9]],["title/modules/AtftConnectorModule.html",[433,0.593,457,2.271]],["body/modules/AtftConnectorModule.html",[0,0.044,3,0.267,4,0.267,5,0.2,35,0.021,63,0.311,68,0.233,70,0.267,101,0.014,102,0.017,103,0.014,137,1.29,138,1.016,433,0.853,435,1.654,436,1.654,437,0.531,438,2.371,439,1.843,440,0.616,441,2.371,446,1.985,447,1.843,448,1.746,451,2.338,452,2.474,453,1.948,456,1.843,457,4.666,458,4.42,459,4.42,460,4.42,461,1.464,462,1.464,463,5.169,464,5.169,465,6.204]],["title/modules/AtftControlModule.html",[433,0.593,466,2.271]],["body/modules/AtftControlModule.html",[0,0.045,3,0.275,4,0.275,5,0.206,35,0.021,63,0.304,68,0.24,70,0.275,101,0.015,102,0.018,103,0.015,433,0.879,435,1.704,436,1.704,437,0.547,438,2.401,439,1.9,440,0.635,441,2.401,446,2.021,447,1.9,448,1.799,451,2.381,452,2.518,453,2.008,456,1.9,466,4.6,467,4.555,468,4.555,469,4.555,470,1.469,471,5.326,472,5.326,473,1.236,474,5.326]],["title/modules/AtftHelperModule.html",[433,0.593,475,2.271]],["body/modules/AtftHelperModule.html",[0,0.043,3,0.261,4,0.261,5,0.195,35,0.021,63,0.316,68,0.227,70,0.261,101,0.014,102,0.017,103,0.014,433,0.832,435,1.613,436,1.613,437,0.518,438,2.345,439,1.798,440,0.601,441,2.345,446,1.956,447,1.798,448,1.702,451,2.303,452,2.437,453,1.9,456,1.798,475,4.704,476,4.31,477,4.31,478,4.31,479,1.459,480,1.459,481,1.459,482,5.041,483,5.041,484,1.17,485,6.111,486,5.041,487,1.17]],["title/modules/AtftLightModule.html",[433,0.593,488,2.271]],["body/modules/AtftLightModule.html",[0,0.043,3,0.26,4,0.26,5,0.195,35,0.021,63,0.316,68,0.227,70,0.26,101,0.014,102,0.017,103,0.014,433,0.831,435,1.611,436,1.611,437,0.517,438,2.344,439,1.795,440,0.6,441,2.344,446,1.954,447,1.795,448,1.7,451,2.301,452,2.435,453,1.897,456,1.795,488,4.704,489,4.305,490,4.305,491,4.305,492,1.459,493,1.459,494,1.459,495,5.034,496,5.034,497,1.168,498,6.572,499,1.168,500,1.168]],["title/modules/AtftLoaderModule.html",[433,0.593,501,2.271]],["body/modules/AtftLoaderModule.html",[0,0.043,3,0.26,4,0.26,5,0.195,35,0.021,63,0.316,68,0.227,70,0.26,101,0.014,102,0.017,103,0.014,111,0.831,247,1.106,340,1.378,433,0.831,435,1.611,436,1.611,437,0.517,438,2.344,439,1.795,440,0.6,441,2.344,446,1.954,447,1.795,448,1.7,451,2.301,452,2.435,453,1.897,456,1.795,501,4.704,502,4.305,503,4.305,504,4.305,505,1.459,506,1.459,507,5.034,508,5.034,509,6.572,510,1.106]],["title/modules/AtftMeshModule.html",[433,0.593,511,2.271]],["body/modules/AtftMeshModule.html",[0,0.039,3,0.24,4,0.24,5,0.18,35,0.021,63,0.323,68,0.21,70,0.24,101,0.013,102,0.016,103,0.013,433,0.767,435,1.488,436,1.488,437,0.478,438,2.263,439,1.659,440,0.554,441,2.263,446,1.861,447,1.659,448,1.571,451,2.192,452,2.319,453,1.753,456,1.659,511,4.755,512,3.977,513,3.977,514,3.977,515,1.444,516,1.444,517,1.444,518,1.444,519,1.444,520,1.444,521,4.651,522,4.651,523,1.022,524,5.969,525,1.079,526,1.079,527,1.022,528,1.079,529,1.079]],["title/modules/AtftModule.html",[433,0.593,530,2.101]],["body/modules/AtftModule.html",[0,0.041,3,0.249,4,0.249,5,0.186,35,0.021,59,1.003,63,0.322,68,0.218,70,0.249,101,0.013,102,0.017,103,0.013,198,2.161,433,0.981,434,4.663,435,1.543,436,1.543,437,0.495,438,1.72,439,1.72,440,0.575,441,2.3,446,1.903,447,1.72,448,1.629,451,2.242,456,2.3,466,4.663,530,4.375,531,4.123,532,4.123,533,4.123,534,4.663,535,4.663,536,4.822,537,4.822,538,4.822,539,4.822,540,4.822,541,4.822,542,4.822,543,4.073,544,4.822,545,4.822,546,4.822,547,4.822,548,3.32,549,4.123,550,4.822,551,4.123,552,4.822,553,4.123,554,4.822]],["title/modules/AtftObjectModule.html",[433,0.593,534,2.271]],["body/modules/AtftObjectModule.html",[0,0.038,3,0.234,4,0.234,5,0.175,35,0.021,63,0.324,68,0.204,70,0.234,101,0.013,102,0.016,103,0.013,433,0.747,435,1.448,436,1.448,437,0.465,438,2.235,439,1.614,440,0.539,441,2.235,446,1.829,447,1.614,448,1.528,451,2.154,452,2.498,453,1.705,456,2.038,457,4.624,475,4.624,488,4.624,501,4.624,511,4.624,534,4.763,555,3.869,556,3.869,557,3.869,558,3.869,559,1.359,560,4.624,561,4.524,562,4.524,563,4.524,564,4.524,565,4.524,566,4.524,567,4.524,568,4.524,569,4.524,570,4.524,571,4.524,572,4.524,573,4.524,574,4.524,575,4.524]],["title/modules/AtftPipeModule.html",[433,0.593,543,2.271]],["body/modules/AtftPipeModule.html",[0,0.044,3,0.268,4,0.268,5,0.201,35,0.021,63,0.311,68,0.234,70,0.268,101,0.015,102,0.017,103,0.015,433,0.857,435,1.661,436,1.661,437,0.533,438,2.375,439,1.851,440,0.619,441,2.375,446,1.99,447,1.851,448,1.753,451,2.344,452,2.48,453,1.956,456,1.851,543,4.669,576,4.439,577,4.439,578,4.439,579,4.706,580,4.706,581,5.191,582,5.191,583,5.191,584,5.191]],["title/modules/AtftRendererModule.html",[433,0.593,535,2.271]],["body/modules/AtftRendererModule.html",[0,0.045,3,0.275,4,0.275,5,0.206,35,0.021,63,0.304,68,0.24,70,0.275,101,0.015,102,0.018,103,0.015,433,0.879,435,1.704,436,1.704,437,0.547,438,2.401,439,1.9,440,0.635,441,2.401,446,2.021,447,1.9,448,1.799,451,2.381,452,2.518,453,2.008,456,1.9,535,4.6,585,4.555,586,4.555,587,4.555,588,1.469,589,5.326,590,5.326,591,1.236,592,5.326]],["title/modules/AtftTextModule.html",[433,0.593,560,2.271]],["body/modules/AtftTextModule.html",[0,0.045,3,0.275,4,0.275,5,0.206,35,0.021,63,0.304,68,0.24,70,0.275,101,0.015,102,0.018,103,0.015,433,0.879,435,1.704,436,1.704,437,0.547,438,2.401,439,1.9,440,0.635,441,2.401,446,2.021,447,1.9,448,1.799,451,2.381,452,2.518,453,2.008,456,1.9,524,4.555,560,4.6,593,4.555,594,4.555,595,4.555,596,1.554,597,5.326,598,5.326,599,1.236]],["title/components/AxesHelperComponent.html",[389,0.116,479,0.707]],["body/components/AxesHelperComponent.html",[0,0.026,3,0.16,4,0.16,5,0.12,11,0.481,12,0.776,14,0.687,15,1.367,18,1.016,20,1.086,21,0.905,22,0.822,24,0.822,29,1.028,30,0.973,31,2.316,32,1.139,34,0.978,35,0.021,36,1.016,39,0.995,40,1.144,44,0.575,45,0.822,47,0.822,48,0.904,49,0.822,50,0.543,52,1.284,60,0.575,62,1.308,63,0.233,64,0.822,65,0.822,68,0.14,69,0.731,70,0.16,71,0.511,89,0.801,93,0.644,101,0.009,102,0.012,103,0.009,107,0.973,108,1.447,109,0.973,110,1.219,111,1.054,112,0.973,115,1.403,118,0.973,119,1.135,120,1.135,121,1.135,122,1.135,123,0.973,124,0.973,127,0.87,128,0.681,129,0.644,130,1.6,131,0.719,132,0.719,133,0.681,134,0.719,137,0.921,138,0.609,143,0.759,154,0.681,155,1.29,156,0.719,157,0.719,158,0.719,159,0.719,160,0.719,161,0.681,162,0.719,163,0.719,164,0.719,165,0.719,166,0.681,167,0.719,169,1.684,175,0.543,208,0.719,246,0.681,247,0.681,295,3.364,340,0.575,345,1.207,346,1.207,347,1.207,348,1.207,349,1.207,350,1.207,351,1.144,352,1.144,353,1.144,366,0.845,367,0.845,368,0.845,369,0.759,370,0.845,371,0.801,372,0.801,375,0.845,376,0.845,377,0.845,378,0.845,379,0.845,380,0.845,381,0.845,382,0.845,388,0.845,389,0.182,390,0.759,391,0.845,437,0.318,440,0.528,445,0.609,454,0.719,461,0.609,462,0.609,470,0.609,473,0.719,479,1.219,480,0.609,481,0.609,484,1.199,487,0.719,492,0.609,493,0.609,494,0.609,497,0.719,499,0.719,500,0.719,505,0.609,506,0.609,510,0.681,515,0.609,516,0.609,517,0.609,518,0.609,519,0.609,520,0.609,523,0.681,525,0.719,526,0.719,527,0.681,528,0.719,529,0.719,559,0.575,588,0.609,591,0.719,596,0.644,599,0.719,600,0.921,601,0.759,602,0.759,603,4.821,604,2.354,605,0.681,606,1.207,607,1.207,608,1.409,609,1.796,610,1.611,611,1.028,612,3.926,613,3.787,614,0.891,615,0.891,616,0.891,617,0.891,618,0.891,619,0.891,620,0.891,621,0.891,622,0.891,623,0.891,624,3.098,625,3.787,626,3.098,627,3.098,628,3.098,629,1.028,630,1.085,631,0.759,632,1.381,633,0.759,634,1.085,635,1.564,636,1.266,637,0.759,638,0.644,639,0.759,640,1.085,641,1.085,642,1.266,643,0.759,644,0.759,645,0.759,646,0.644,647,0.759,648,0.719,649,0.719,650,0.759]],["title/components/BoxMeshComponent.html",[389,0.116,515,0.707]],["body/components/BoxMeshComponent.html",[0,0.021,3,0.126,4,0.126,5,0.094,11,0.378,12,0.649,14,0.576,15,1.351,18,0.986,20,1.115,21,0.786,22,0.931,24,0.688,29,0.86,30,0.815,32,1.14,34,0.956,35,0.021,36,0.882,39,0.987,40,1.134,44,0.688,45,0.931,47,0.829,48,0.888,49,1.009,50,0.649,52,1.29,58,1.399,59,1.324,60,0.452,62,1.164,63,0.226,64,1.098,65,0.688,68,0.11,69,0.612,70,0.126,71,0.612,80,1.291,89,1.16,90,4.32,93,0.771,100,2.608,101,0.007,102,0.01,103,0.007,107,0.815,108,1.407,109,0.815,110,1.118,111,0.976,112,0.815,115,1.299,118,0.815,119,0.986,120,0.986,121,0.986,122,0.986,123,0.815,124,0.815,127,0.729,128,0.535,129,0.506,130,1.596,131,0.565,132,0.565,133,0.535,134,0.565,137,0.771,138,1.162,143,0.597,154,0.535,155,1.182,156,0.565,157,0.565,158,0.565,159,0.565,160,0.565,161,0.535,162,0.565,163,0.565,164,0.565,165,0.565,166,0.535,167,0.565,172,1.516,175,0.427,208,0.565,246,0.535,247,0.535,253,3.128,255,2.44,256,2.015,257,2.44,258,1.767,259,1.662,260,2.119,261,1.662,262,2.015,264,1.324,265,1.884,268,1.238,272,0.918,274,1.324,291,1.324,340,0.452,345,1.011,346,1.011,347,1.011,348,1.011,349,1.011,350,1.011,351,0.958,352,0.958,353,0.958,366,0.664,367,0.664,368,0.664,369,0.597,370,0.664,371,1.16,372,1.16,375,0.664,376,1.011,377,0.664,378,0.664,379,0.664,380,0.664,381,0.664,382,0.664,388,0.664,389,0.162,390,0.597,391,0.664,437,0.25,440,0.442,445,0.479,454,0.565,461,0.479,462,0.479,470,0.479,473,0.565,479,0.479,480,0.479,481,0.479,484,0.565,487,0.565,492,0.479,493,0.479,494,0.479,497,0.565,499,0.565,500,0.565,505,0.479,506,0.479,510,0.535,515,1.118,516,0.479,517,0.479,518,0.479,519,0.479,520,0.479,523,0.986,525,0.565,526,0.565,527,0.535,528,0.565,529,0.565,559,0.452,588,0.479,591,0.565,596,0.506,599,0.565,600,0.771,601,0.597,602,0.597,605,0.535,606,1.011,607,1.011,608,1.224,609,1.753,610,1.572,611,0.86,614,0.7,615,0.7,616,0.7,617,0.7,618,0.7,619,0.7,620,0.7,621,0.7,622,0.7,623,0.7,629,0.86,630,0.908,631,0.597,632,1.229,633,0.597,634,0.908,635,1.448,636,1.099,637,0.597,638,0.506,639,0.597,640,0.908,641,0.908,642,1.099,643,0.597,644,0.597,645,0.597,646,0.506,647,0.597,648,0.565,649,0.565,650,0.597,651,5.211,652,1.324,653,5.056,654,4.489,655,3.734,656,3.41,657,4.492,658,3.41,659,3.915,660,2.436,661,4.863,662,4.863,663,4.863,664,5.612,665,2.436,666,4.863,667,4.863,668,4.863,669,4.863,670,4.863,671,2.083,672,2.436,673,1.85,674,2.083,675,1.423,676,1.423,677,1.423,678,1.423,679,1.423,680,2.436,681,1.423,682,1.423,683,1.423,684,1.423,685,2.436,686,2.436,687,1.85,688,2.436,689,1.85,690,1.85,691,2.436,692,1.423,693,1.423]],["title/components/CylinderMeshComponent.html",[389,0.116,516,0.707]],["body/components/CylinderMeshComponent.html",[0,0.022,3,0.134,4,0.134,5,0.1,11,0.401,12,0.679,14,0.602,15,1.364,18,1.016,20,1.132,21,0.815,22,0.96,24,0.72,29,0.9,30,0.852,31,2.086,32,1.15,34,0.964,35,0.021,36,0.915,39,0.998,40,1.15,44,0.72,45,0.96,47,0.848,48,0.905,49,0.848,50,0.679,52,1.144,58,1.461,59,1.382,60,0.864,62,1.2,63,0.233,64,1.178,65,0.72,68,0.117,69,0.64,70,0.134,71,0.64,80,1.338,89,0.668,93,0.806,100,1.462,101,0.007,102,0.011,103,0.007,107,0.852,108,1.416,109,0.852,110,1.144,111,0.996,112,0.852,115,1.326,118,0.852,119,1.023,120,1.023,121,1.023,122,1.023,123,0.852,124,0.852,127,0.762,128,0.568,129,0.537,130,1.604,131,0.6,132,0.6,133,0.568,134,0.6,137,0.806,138,1.186,143,0.633,154,0.568,155,1.21,156,0.6,157,0.6,158,0.6,159,0.6,160,0.6,161,0.568,162,0.6,163,0.6,164,0.6,165,0.6,166,0.568,167,0.6,169,1.405,172,1.572,175,0.453,208,0.6,246,0.568,247,0.568,253,3.169,255,2.53,256,2.108,257,2.53,258,1.848,259,1.738,260,2.184,261,1.738,262,2.108,264,1.405,265,2.627,268,1.313,272,0.974,274,1.405,291,1.405,340,0.48,345,1.057,346,1.057,347,1.057,348,1.057,349,1.057,350,1.057,351,1.002,352,1.002,353,1.002,366,0.705,367,0.705,368,0.705,369,0.633,370,0.705,371,0.668,372,0.668,375,0.705,376,1.057,377,0.705,378,0.705,379,0.705,380,0.705,381,0.705,382,0.705,388,0.705,389,0.167,390,0.633,391,0.705,437,0.266,440,0.462,445,0.508,454,0.6,461,0.508,462,0.508,470,0.508,473,0.6,479,0.508,480,0.508,481,0.508,484,0.6,487,0.6,492,0.508,493,0.508,494,0.508,497,0.6,499,0.6,500,0.6,505,0.508,506,0.508,510,0.568,515,0.508,516,1.144,517,0.508,518,0.508,519,0.508,520,0.508,523,0.568,525,1.08,526,0.6,527,0.568,528,0.6,529,0.6,559,0.48,588,0.508,591,0.6,596,0.537,599,0.6,600,0.806,601,0.633,602,0.633,605,0.568,606,1.057,607,1.057,608,1.269,609,1.764,610,1.583,611,0.9,614,0.743,615,0.743,616,0.743,617,0.743,618,0.743,619,0.743,620,0.743,621,0.743,622,0.743,623,0.743,629,0.9,630,0.95,631,0.633,632,1.267,633,0.633,634,0.95,635,1.478,636,1.14,637,0.633,638,0.537,639,0.633,640,0.95,641,0.95,642,1.14,643,0.633,644,0.633,645,0.633,646,0.537,647,0.633,648,0.6,649,0.6,650,0.633,652,1.405,655,2.939,656,3.536,659,4.005,674,2.211,675,1.51,676,1.51,677,1.51,678,1.51,679,1.51,681,1.51,682,1.51,683,1.51,684,1.51,687,1.964,690,1.964,692,1.51,693,1.51,694,5.613,695,4.654,696,3.98,697,4.654,698,4.654,699,4.654,700,4.654,701,3.316,702,2.211,703,2.211,704,2.211,705,2.946,706,2.211,707,2.211,708,1.964,709,2.449,710,2.67,711,3.878,712,2.585,713,2.585,714,2.585,715,2.585,716,2.585,717,2.211,718,2.585,719,2.585,720,2.585]],["title/modules/DataCenterActorModule.html",[433,0.593,721,2.476]],["body/modules/DataCenterActorModule.html",[0,0.043,3,0.262,4,0.262,5,0.196,35,0.021,63,0.316,68,0.229,70,0.262,101,0.014,102,0.017,103,0.014,433,0.836,435,1.622,436,1.622,437,0.521,438,2.351,439,1.808,440,0.604,441,2.351,446,1.962,447,1.808,448,1.712,451,2.311,452,2.445,453,1.91,456,2.187,530,4.164,638,1.545,646,1.545,721,5.115,722,4.334,723,4.334,724,5.069,725,4.334,726,4.334,727,5.069,728,3.851,729,5.069,730,5.069,731,6.131,732,5.069,733,5.069]],["title/pipes/Deg2RadPipe.html",[579,2.271,734,2.271]],["body/pipes/Deg2RadPipe.html",[0,0.045,3,0.276,4,0.276,5,0.207,8,2.714,14,0.829,32,0.829,34,0.73,35,0.021,39,0.779,47,0.779,48,0.983,49,0.779,52,1.398,63,0.241,68,0.241,70,0.276,101,0.015,102,0.018,103,0.015,175,0.936,369,1.55,579,3.996,605,1.174,710,3.678,734,3.996,735,4.058,736,4.568,737,6.327,738,4.568,739,6.327,740,5.342,741,5.41,742,6.084,743,5.41,744,4.568,745,5.342,746,4.568]],["title/components/DirectionalLightComponent.html",[389,0.116,492,0.707]],["body/components/DirectionalLightComponent.html",[0,0.025,3,0.15,4,0.15,5,0.112,11,0.451,12,0.741,14,0.657,15,1.351,18,0.98,20,1.063,21,0.873,22,0.785,24,0.785,29,0.981,30,0.929,32,1.137,34,0.965,35,0.021,36,0.98,39,0.982,40,1.124,44,0.54,45,0.785,47,0.798,48,0.885,49,0.798,50,0.509,52,1.193,58,1.278,59,1.138,60,0.54,62,1.27,63,0.247,64,1.08,65,0.785,68,0.131,69,0.698,70,0.15,71,0.823,80,1.433,89,0.751,93,0.604,100,1.594,101,0.008,102,0.012,103,0.008,107,0.929,108,1.439,109,0.929,110,1.193,111,1.034,112,0.929,115,1.376,118,0.929,119,1.095,120,1.095,121,1.095,122,1.095,123,0.929,124,0.929,125,3.769,127,0.831,128,0.639,129,0.604,130,1.589,131,0.675,132,0.675,133,0.639,134,0.675,137,0.879,138,0.571,143,0.712,149,1.58,154,0.639,155,1.335,156,0.675,157,0.675,158,0.675,159,0.675,160,0.675,161,0.639,162,0.675,163,0.675,164,0.675,165,0.675,166,0.639,167,0.675,172,0.982,175,0.509,181,2.486,208,0.675,246,0.639,247,0.639,258,2.376,283,3.213,340,0.54,345,1.153,346,1.153,347,1.153,348,1.153,349,1.153,350,1.153,351,1.093,352,1.093,353,1.093,366,0.793,367,0.793,368,0.793,369,0.712,370,0.793,371,0.751,372,0.751,375,0.793,376,0.793,377,0.793,378,0.793,379,0.793,380,0.793,381,0.793,382,0.793,388,0.793,389,0.177,390,0.712,391,0.793,437,0.299,440,0.504,445,0.571,454,0.675,461,0.571,462,0.571,470,0.571,473,0.675,479,0.571,480,0.571,481,0.571,484,0.675,487,0.675,492,1.193,493,0.571,494,0.571,497,0.675,499,0.675,500,1.157,505,0.571,506,0.571,510,0.639,515,0.571,516,0.571,517,0.571,518,0.571,519,0.571,520,0.571,523,0.639,525,0.675,526,0.675,527,0.639,528,0.675,529,0.675,559,0.54,588,0.571,591,0.675,596,0.604,599,0.675,600,0.879,601,0.712,602,0.712,605,0.639,606,1.153,607,1.153,608,1.359,609,1.786,610,1.602,611,0.981,614,0.836,615,0.836,616,0.836,617,0.836,618,0.836,619,0.836,620,0.836,621,0.836,622,0.836,623,0.836,629,0.981,630,1.036,631,0.712,632,1.341,633,0.712,634,1.036,635,1.534,636,1.221,637,0.712,638,0.604,639,0.712,640,1.036,641,1.036,642,1.221,643,0.712,644,0.712,645,0.712,646,0.604,647,0.712,648,0.675,649,0.675,650,0.712,747,5.19,748,2.001,749,3.769,750,2.781,751,3.787,752,2.486,753,2.912,754,2.208,755,2.208,756,2.486,757,2.907,758,1.303,759,1.698,760,2.907,761,2.907,762,2.907,763,2.486,764,2.907,765,2.486,766,2.208,767,2.907,768,3.769,769,2.907,770,2.907,771,2.907,772,2.486,773,2.486,774,2.486,775,2.208,776,2.907,777,2.486,778,2.486,779,2.208]],["title/components/EmptyComponent.html",[389,0.116,480,0.707]],["body/components/EmptyComponent.html",[0,0.027,3,0.162,4,0.162,5,0.121,11,0.488,12,0.783,14,0.694,15,1.37,18,1.023,20,1.091,21,0.912,22,0.83,24,0.83,29,1.038,30,0.982,31,2.334,32,1.137,34,0.976,35,0.021,36,1.023,39,0.998,40,1.148,44,0.583,45,0.83,47,0.827,48,0.908,49,0.827,50,0.55,52,1.225,60,0.583,62,1.316,63,0.235,64,0.583,65,0.83,68,0.142,69,0.738,70,0.162,71,0.518,89,0.812,93,0.653,101,0.009,102,0.012,103,0.009,107,0.982,108,1.449,109,0.982,110,1.225,111,1.058,112,0.982,115,1.409,118,0.982,119,1.144,120,1.144,121,1.144,122,1.144,123,0.982,124,0.982,127,0.879,128,0.69,129,0.653,130,1.602,131,0.729,132,0.729,133,0.69,134,0.729,137,0.93,138,0.617,143,0.769,154,0.69,155,1.386,156,0.729,157,0.729,158,0.729,159,0.729,160,0.729,161,0.69,162,0.729,163,0.729,164,0.729,165,0.729,166,0.69,167,0.729,169,1.707,175,0.55,208,0.729,246,0.69,247,0.69,251,3.824,340,0.583,345,1.219,346,1.219,347,1.219,348,1.219,349,1.219,350,1.219,351,1.156,352,1.156,353,1.156,366,0.856,367,0.856,368,0.856,369,0.769,370,0.856,371,0.812,372,0.812,375,0.856,376,0.856,377,0.856,378,0.856,379,0.856,380,0.856,381,0.856,382,0.856,388,0.856,389,0.184,390,0.769,391,0.856,437,0.323,440,0.533,445,0.617,454,0.729,461,0.617,462,0.617,470,0.617,473,0.729,479,0.617,480,1.225,481,0.617,484,0.729,487,0.729,492,0.617,493,0.617,494,0.617,497,0.729,499,0.729,500,0.729,505,0.617,506,0.617,510,0.69,515,0.617,516,0.617,517,0.617,518,0.617,519,0.617,520,0.617,523,0.69,525,0.729,526,0.729,527,0.69,528,0.729,529,0.729,559,0.583,588,0.617,591,0.729,596,0.653,599,0.729,600,0.93,601,0.769,602,0.769,605,0.69,606,1.219,607,1.219,608,1.42,609,1.799,610,1.613,611,1.038,614,0.903,615,0.903,616,0.903,617,0.903,618,0.903,619,0.903,620,0.903,621,0.903,622,0.903,623,0.903,629,1.038,630,1.095,631,0.769,632,1.39,633,0.769,634,1.095,635,1.57,636,1.275,637,0.769,638,0.653,639,0.769,640,1.095,641,1.095,642,1.275,643,0.769,644,0.769,645,0.769,646,0.653,647,0.769,648,0.729,649,0.729,650,0.769,780,2.686,781,3.141,782,3.141,783,3.141,784,3.141]],["title/components/FrameMeshComponent.html",[389,0.116,517,0.707]],["body/components/FrameMeshComponent.html",[0,0.022,3,0.136,4,0.136,5,0.102,11,0.408,12,0.688,14,0.61,15,1.368,18,1.025,20,1.137,21,0.823,22,0.968,24,0.729,29,0.911,30,0.863,32,1.142,34,0.966,35,0.021,36,1.338,39,1.001,40,1.154,44,0.729,45,0.968,47,0.854,48,0.909,49,0.854,50,0.688,52,1.151,58,1.333,59,1.261,60,0.488,62,1.21,63,0.235,64,0.968,65,0.729,68,0.119,69,0.648,70,0.136,71,0.776,80,1.352,89,0.68,93,0.817,101,0.007,102,0.011,103,0.007,107,0.863,108,1.419,109,0.863,110,1.151,111,1.001,112,0.863,115,1.333,118,0.863,119,1.033,120,1.033,121,1.033,122,1.033,123,0.863,124,0.863,127,0.772,128,0.578,129,0.547,130,1.607,131,0.61,132,0.61,133,0.578,134,0.61,137,0.817,138,1.193,143,0.644,154,0.578,155,1.217,156,0.61,157,0.61,158,0.61,159,0.61,160,0.61,161,0.578,162,0.61,163,0.61,164,0.61,165,0.61,166,0.578,167,0.61,172,2.049,175,0.461,208,0.61,246,0.578,247,0.578,253,3.18,255,2.556,256,2.135,257,2.556,258,1.872,259,1.76,260,2.203,261,1.76,262,2.135,264,1.429,265,2.65,268,1.336,272,0.991,274,1.429,291,1.429,340,0.488,345,1.071,346,1.071,347,1.071,348,1.071,349,1.071,350,1.071,351,1.015,352,1.015,353,1.015,366,0.717,367,0.717,368,0.717,369,0.644,370,0.717,371,0.68,372,0.68,375,0.717,376,1.071,377,0.717,378,0.717,379,0.717,380,0.717,381,0.717,382,0.717,388,0.717,389,0.169,390,0.644,391,0.717,437,0.27,440,0.468,445,0.517,454,0.61,461,0.517,462,0.517,470,0.517,473,0.61,479,0.517,480,0.517,481,0.517,484,0.61,487,0.61,492,0.517,493,0.517,494,0.517,497,0.61,499,0.61,500,0.61,505,0.517,506,0.517,510,0.578,515,0.517,516,0.517,517,1.151,518,0.517,519,0.517,520,0.517,523,0.578,525,0.61,526,1.091,527,0.578,528,0.61,529,0.61,559,0.488,588,0.517,591,0.61,596,0.547,599,0.61,600,0.817,601,0.644,602,0.644,605,0.578,606,1.071,607,1.071,608,1.282,609,1.768,610,1.586,611,0.911,614,0.756,615,0.756,616,0.756,617,0.756,618,0.756,619,0.756,620,0.756,621,0.756,622,0.756,623,0.756,629,0.911,630,0.962,631,0.644,632,1.277,633,0.644,634,0.962,635,1.486,636,1.152,637,0.644,638,0.547,639,0.644,640,0.962,641,0.962,642,1.152,643,0.644,644,0.644,645,0.644,646,0.547,647,0.644,648,0.61,649,0.61,650,0.644,652,1.429,671,2.249,673,1.998,675,1.536,676,1.536,677,1.536,678,1.536,679,1.536,681,1.536,682,1.536,683,1.536,684,1.536,692,1.536,693,1.536,706,2.249,708,1.998,709,2.481,785,4.773,786,4.702,787,4.702,788,4.702,789,4.46,790,6.237,791,2.63,792,3.928,793,6.673,794,2.63,795,2.63,796,2.63,797,2.63,798,2.63,799,5.855,800,5.215,801,2.63]],["title/components/GridHelperComponent.html",[389,0.116,481,0.707]],["body/components/GridHelperComponent.html",[0,0.026,3,0.159,4,0.159,5,0.119,11,0.476,12,0.77,14,0.682,15,1.364,18,1.01,20,1.083,21,0.9,22,0.816,24,0.816,29,1.02,30,0.966,31,2.303,32,1.14,34,0.981,35,0.021,36,1.01,39,0.993,40,1.141,44,0.569,45,0.816,47,0.818,48,0.901,49,0.818,50,0.537,52,1.323,60,0.569,62,1.302,63,0.232,64,0.954,65,0.816,68,0.138,69,0.725,70,0.159,71,0.506,89,0.793,93,0.638,101,0.009,102,0.012,103,0.009,107,0.966,108,1.446,109,0.966,110,1.215,111,1.051,112,0.966,115,1.399,118,0.966,119,1.129,120,1.129,121,1.129,122,1.129,123,0.966,124,0.966,127,0.864,128,0.674,129,0.638,130,1.598,131,0.712,132,0.712,133,0.674,134,0.712,137,0.914,138,0.603,143,0.751,154,0.674,155,1.285,156,0.712,157,0.712,158,0.712,159,0.712,160,0.712,161,0.674,162,0.712,163,0.712,164,0.712,165,0.712,166,0.674,167,0.712,169,1.667,175,0.537,208,0.712,246,0.674,247,0.674,295,3.34,340,0.569,345,1.199,346,1.199,347,1.199,348,1.199,349,1.199,350,1.199,351,1.136,352,1.136,353,1.136,366,0.836,367,0.836,368,0.836,369,0.751,370,0.836,371,0.793,372,0.793,375,0.836,376,0.836,377,0.836,378,0.836,379,0.836,380,0.836,381,0.836,382,0.836,388,0.836,389,0.182,390,0.751,391,0.836,437,0.315,440,0.524,445,0.603,454,0.712,461,0.603,462,0.603,470,0.603,473,0.712,479,0.603,480,0.603,481,1.215,484,0.712,487,1.192,492,0.603,493,0.603,494,0.603,497,0.712,499,0.712,500,0.712,505,0.603,506,0.603,510,0.674,515,0.603,516,0.603,517,0.603,518,0.603,519,0.603,520,0.603,523,0.674,525,0.712,526,0.712,527,0.674,528,0.712,529,0.712,559,0.569,588,0.603,591,0.712,596,0.638,599,0.712,600,0.914,601,0.751,602,0.751,604,2.33,605,0.674,606,1.199,607,1.199,608,1.401,609,1.795,610,1.61,611,1.02,612,3.904,613,2.623,614,0.882,615,0.882,616,0.882,617,0.882,618,0.882,619,0.882,620,0.882,621,0.882,622,0.882,623,0.882,625,3.76,629,1.02,630,1.077,631,0.751,632,1.375,633,0.751,634,1.077,635,1.56,636,1.259,637,0.751,638,0.638,639,0.751,640,1.077,641,1.077,642,1.259,643,0.751,644,0.751,645,0.751,646,0.638,647,0.751,648,0.712,649,0.712,650,0.751,802,5.08,803,5.139,804,4.396,805,3.067,806,3.067,807,3.067,808,3.067,809,3.067]],["title/components/HemisphereLightComponent.html",[389,0.116,493,0.707]],["body/components/HemisphereLightComponent.html",[0,0.026,3,0.157,4,0.157,5,0.117,11,0.471,12,0.764,14,0.677,15,1.362,18,1.004,20,1.079,21,0.895,22,0.81,24,0.81,29,1.012,30,0.959,32,1.139,34,0.971,35,0.021,36,1.004,39,0.991,40,1.137,44,0.563,45,0.81,47,0.814,48,0.898,49,0.814,50,0.531,52,1.211,58,1.122,59,1.062,60,0.563,62,1.296,63,0.252,64,1.037,65,0.81,68,0.137,69,0.72,70,0.157,71,0.501,89,0.784,93,0.631,100,1.644,101,0.008,102,0.012,103,0.008,107,0.959,108,1.445,109,0.959,110,1.211,111,1.047,112,0.959,115,1.394,118,0.959,119,1.122,120,1.122,121,1.122,122,1.122,123,0.959,124,0.959,127,0.857,128,0.667,129,0.631,130,1.597,131,0.704,132,0.704,133,0.667,134,0.704,137,0.907,138,0.596,143,0.743,154,0.667,155,1.281,156,0.704,157,0.704,158,0.704,159,0.704,160,0.704,161,0.667,162,0.704,163,0.704,164,0.704,165,0.704,166,0.667,167,0.704,172,1.025,175,0.531,208,0.704,246,0.667,247,0.667,340,0.563,345,1.189,346,1.189,347,1.189,348,1.189,349,1.189,350,1.189,351,1.127,352,1.127,353,1.127,366,0.827,367,0.827,368,0.827,369,0.743,370,0.827,371,0.784,372,0.784,375,0.827,376,0.827,377,0.827,378,0.827,379,0.827,380,0.827,381,0.827,382,0.827,388,0.827,389,0.181,390,0.743,391,0.827,437,0.312,440,0.52,445,0.596,454,0.704,461,0.596,462,0.596,470,0.596,473,0.704,479,0.596,480,0.596,481,0.596,484,0.704,487,0.704,492,0.596,493,1.211,494,0.596,497,0.704,499,1.185,500,0.704,505,0.596,506,0.596,510,0.667,515,0.596,516,0.596,517,0.596,518,0.596,519,0.596,520,0.596,523,0.667,525,0.704,526,0.704,527,0.667,528,0.704,529,0.704,559,0.563,588,0.596,591,0.704,596,0.631,599,0.704,600,0.907,601,0.743,602,0.743,605,0.667,606,1.189,607,1.189,608,1.393,609,1.793,610,1.608,611,1.012,614,0.873,615,0.873,616,0.873,617,0.873,618,0.873,619,0.873,620,0.873,621,0.873,622,0.873,623,0.873,629,1.012,630,1.069,631,0.743,632,1.368,633,0.743,634,1.069,635,1.555,636,1.251,637,0.743,638,0.631,639,0.743,640,1.069,641,1.069,642,1.251,643,0.743,644,0.743,645,0.743,646,0.631,647,0.743,648,0.704,649,0.704,650,0.743,748,2.089,749,3.845,750,1.542,751,3.88,752,2.595,753,3.003,754,2.305,755,2.305,758,1.36,759,1.773,810,5.059,811,5.108,812,5.108,813,4.362,814,2.595,815,3.034,816,3.034,817,3.034,818,3.034]],["title/components/LineConnectorComponent.html",[389,0.116,461,0.707]],["body/components/LineConnectorComponent.html",[0,0.023,3,0.14,4,0.274,5,0.105,11,0.422,12,0.705,14,0.625,15,1.347,18,1.264,20,1.127,21,0.84,22,0.747,24,0.747,29,0.934,30,0.884,32,1.142,34,0.97,35,0.021,36,1.112,39,1.02,40,1.177,44,0.504,45,0.747,47,0.773,48,0.864,49,0.773,50,0.476,52,1.165,58,0.597,59,0.837,60,0.504,62,1.23,63,0.255,64,0.747,65,0.747,68,0.123,69,0.664,70,0.14,71,0.664,80,0.781,81,1.477,89,0.702,93,0.565,100,1.517,101,0.008,102,0.011,103,0.008,104,4.133,107,0.884,108,1.43,109,0.884,110,1.305,111,1.039,112,0.884,113,4.659,114,3.642,115,1.302,116,4.659,117,3.642,118,0.884,119,1.053,120,1.053,121,1.053,122,1.053,123,0.884,124,0.884,125,3.3,127,0.791,128,0.597,129,0.565,130,1.605,131,0.631,132,0.631,133,0.597,134,0.631,136,2.064,137,1.337,138,0.791,140,3.642,143,0.986,144,2.064,145,2.771,146,2.064,147,1.716,148,2.064,149,2.188,150,2.064,151,2.064,152,2.064,154,0.597,155,1.232,156,0.631,157,0.631,158,0.631,159,0.631,160,0.631,161,0.597,162,0.631,163,0.631,164,0.631,165,0.631,166,0.597,167,0.631,172,1.359,175,0.476,208,0.631,246,0.597,247,0.597,260,1.7,261,2.148,340,0.504,341,1.871,345,1.097,346,1.097,347,1.097,348,1.097,349,1.097,350,1.097,351,1.04,352,1.04,353,1.04,366,0.741,367,0.741,368,0.741,369,0.666,370,0.741,371,0.702,372,0.702,375,0.741,376,1.445,377,0.741,378,0.741,379,0.741,380,0.741,381,0.741,382,0.741,388,0.741,389,0.172,390,0.666,391,0.741,437,0.279,440,0.48,445,0.534,454,0.631,461,1.165,462,0.534,470,0.534,473,0.631,479,0.534,480,0.534,481,0.534,484,0.631,487,0.631,492,0.534,493,0.534,494,0.534,497,0.631,499,0.631,500,0.631,505,0.534,506,0.534,510,0.597,515,0.534,516,0.534,517,0.534,518,0.534,519,0.534,520,0.534,523,0.597,525,0.631,526,0.631,527,0.597,528,0.631,529,0.631,548,1.871,559,0.504,588,0.534,591,0.934,596,0.565,599,0.631,600,0.837,601,0.666,602,0.666,605,0.597,606,1.097,607,1.097,608,1.307,609,1.774,610,1.591,611,0.934,614,0.781,615,0.781,616,0.781,617,0.781,618,0.781,619,0.781,620,0.781,621,0.781,622,0.781,623,0.781,629,0.934,630,0.986,631,0.666,632,1.298,633,0.666,634,0.986,635,1.502,636,1.174,637,0.666,638,0.565,639,0.666,640,0.986,641,0.986,642,1.174,643,0.666,644,0.666,645,0.666,646,0.565,647,0.666,648,0.934,649,0.631,650,0.666,750,2.045,758,1.218,759,1.587,819,4.839,820,2.064,821,3.642,822,3.442,823,2.717,824,2.324,825,2.324,826,2.717,827,4.025,828,2.324,829,2.324,830,2.324,831,2.324,832,2.324,833,2.324,834,2.717,835,2.064,836,2.324,837,2.324,838,2.717,839,2.324,840,2.717,841,2.324,842,2.717,843,2.717,844,2.324,845,2.717,846,2.717,847,3.442,848,2.064,849,2.717,850,2.717,851,2.717]],["title/components/MeshLineConnectorComponent.html",[389,0.116,462,0.707]],["body/components/MeshLineConnectorComponent.html",[0,0.02,3,0.123,4,0.257,5,0.092,11,0.371,12,0.64,14,0.567,15,1.314,18,1.19,20,0.988,21,0.777,22,0.678,24,0.678,29,0.847,30,0.802,32,1.146,34,0.962,35,0.021,36,1.052,39,1.005,40,1.158,44,0.443,45,0.678,47,0.724,48,0.823,49,0.724,50,0.418,52,1.109,58,1.331,59,1.259,60,0.823,62,1.152,63,0.255,64,1.152,65,0.678,68,0.108,69,0.603,70,0.123,71,0.82,80,1.623,81,1.985,89,0.617,93,0.497,101,0.007,102,0.01,103,0.007,104,4,107,0.802,108,1.412,109,0.802,110,1.371,111,0.999,112,0.802,113,4.461,114,3.369,115,1.24,116,4.461,117,3.369,118,0.802,119,0.974,120,0.974,121,0.974,122,0.974,123,0.802,124,0.802,125,3.053,127,0.718,128,0.525,129,0.497,130,1.586,131,0.554,132,0.554,133,0.525,134,0.554,136,1.814,137,1.48,138,1.109,140,3.369,143,0.895,144,1.814,145,2.514,146,1.814,147,1.508,148,1.814,149,1.985,150,1.814,151,1.814,152,1.814,154,0.525,155,1.173,156,0.554,157,0.554,158,0.554,159,0.554,160,0.554,161,0.525,162,0.554,163,0.554,164,0.554,165,0.554,166,0.525,167,0.554,172,0.807,175,0.418,208,0.554,246,0.525,247,0.525,259,2.398,261,1.987,265,1.856,281,3.123,340,0.443,345,0.996,346,0.996,347,0.996,348,0.996,349,0.996,350,0.996,351,0.944,352,0.944,353,0.944,366,0.651,367,0.651,368,0.651,369,0.585,370,0.651,371,0.617,372,0.617,375,0.651,376,1.354,377,0.651,378,0.651,379,0.651,380,0.651,381,0.651,382,0.651,388,0.651,389,0.161,390,0.585,391,0.651,437,0.245,440,0.435,445,0.469,454,0.554,461,0.469,462,1.109,470,0.469,473,0.554,479,0.469,480,0.469,481,0.469,484,0.554,487,0.554,492,0.469,493,0.469,494,0.469,497,0.554,499,0.554,500,0.554,505,0.469,506,0.469,510,0.525,515,0.469,516,0.469,517,0.469,518,0.469,519,0.469,520,0.469,523,0.525,525,0.554,526,0.554,527,0.525,528,0.554,529,0.554,559,0.443,588,0.469,591,0.554,596,0.497,599,0.554,600,0.759,601,0.585,602,0.585,605,0.525,606,0.996,607,0.996,608,1.209,609,1.749,610,1.569,611,0.847,614,0.687,615,0.687,616,0.687,617,0.687,618,0.687,619,0.687,620,0.687,621,0.687,622,0.687,623,0.687,629,0.847,630,0.895,631,0.585,632,1.216,633,0.585,634,0.895,635,1.438,636,1.086,637,0.585,638,0.497,639,0.585,640,0.895,641,0.895,642,1.086,643,0.585,644,0.585,645,0.585,646,0.497,647,0.585,648,0.554,649,0.554,650,0.585,750,2.253,758,1.07,759,1.395,766,1.814,773,3.123,779,2.775,820,1.814,821,3.369,822,3.123,824,2.042,825,2.042,828,2.042,829,2.042,830,2.042,831,2.042,832,2.042,833,2.042,836,2.042,837,2.042,839,3.123,847,4.576,852,5.769,853,4.434,854,4.966,855,4.434,856,4.434,857,5.351,858,5.351,859,5.351,860,2.388,861,2.388,862,2.388,863,2.388,864,3.773,865,2.388,866,2.388,867,2.388,868,2.388,869,2.388,870,2.388,871,2.388,872,4.966,873,2.388,874,5.351,875,2.388,876,1.814,877,2.388,878,3.652,879,3.652,880,3.652,881,3.652,882,3.652,883,3.652,884,3.652,885,3.123,886,3.652,887,3.652,888,3.652,889,2.388,890,2.388,891,2.388,892,2.388,893,2.388,894,3.652,895,2.388,896,2.388,897,2.388,898,2.388,899,2.388,900,2.388]],["title/components/ObjLoaderComponent.html",[340,0.668,389,0.116]],["body/components/ObjLoaderComponent.html",[0,0.032,3,0.129,4,0.236,5,0.096,11,0.387,12,0.798,14,0.707,15,1.397,18,1.172,20,1.005,21,0.798,22,0.701,24,0.701,29,0.876,30,0.83,32,1.139,34,0.967,35,0.021,36,0.895,39,0.999,40,1.14,44,0.463,45,0.701,47,0.741,48,0.837,49,0.741,50,0.437,52,1.128,58,1.001,59,0.947,60,0.701,62,1.179,63,0.259,64,0.846,65,0.701,68,0.113,69,0.623,70,0.129,71,1.013,89,0.645,93,0.519,100,0.941,101,0.007,102,0.011,103,0.007,107,0.83,108,1.422,109,0.83,110,1.347,111,0.984,112,0.83,115,1.261,118,0.83,119,1.261,120,1.001,121,1.001,122,1.001,123,0.83,124,0.83,127,0.742,128,0.548,129,0.519,130,1.599,131,0.579,132,0.579,133,0.548,134,0.579,137,0.785,138,0.49,143,0.925,149,1.356,154,0.548,155,1.276,156,0.579,157,0.579,158,0.579,159,0.579,160,0.579,161,0.548,162,0.579,163,0.579,164,0.579,165,0.579,166,0.548,167,0.579,175,0.661,187,3.241,189,2.206,192,2.385,193,2.385,194,3.625,195,3.765,196,2.476,197,2.877,198,2.277,200,1.576,201,1.576,202,1.458,203,1.576,205,1.576,206,1.576,207,1.458,208,0.876,209,1.576,210,2.385,211,1.576,212,2.877,213,3.12,214,1.576,215,1.576,216,1.576,217,2.385,218,1.576,221,2.385,222,1.576,234,3.483,241,1.576,246,0.83,247,1.199,260,1.924,272,2.164,280,2.134,294,1.718,296,3.952,298,2.6,301,1.718,302,1.718,306,1.718,307,1.718,308,1.718,309,1.718,310,1.718,322,2.6,323,1.718,324,1.718,325,1.718,326,1.458,327,1.718,328,1.718,329,1.576,330,1.718,331,1.718,332,1.718,333,1.718,340,1.066,345,1.03,346,1.03,347,1.03,348,1.03,349,1.03,350,1.03,351,0.976,352,0.976,353,0.976,366,0.68,367,0.68,368,0.68,369,0.611,370,0.68,371,0.645,372,0.645,375,0.68,376,0.68,377,0.68,378,0.68,379,0.68,380,0.68,381,0.68,382,0.68,388,0.68,389,0.186,390,0.611,391,0.68,437,0.256,440,0.45,445,0.49,454,0.579,461,0.49,462,0.49,470,0.49,473,0.579,479,0.49,480,0.49,481,0.49,484,0.579,487,0.579,492,0.49,493,0.49,494,0.49,497,0.579,499,0.579,500,0.579,505,0.49,506,0.49,510,0.548,515,0.49,516,0.49,517,0.49,518,0.49,519,0.49,520,0.49,523,0.548,525,0.579,526,0.579,527,0.548,528,0.579,529,0.579,559,0.463,588,0.49,591,0.579,596,0.519,599,0.579,600,0.785,601,0.611,602,0.611,605,0.548,606,1.03,607,1.03,608,1.242,609,1.758,610,1.577,611,0.876,614,0.718,615,0.718,616,0.718,617,0.718,618,0.718,619,0.718,620,0.718,621,0.718,622,0.718,623,0.718,629,0.876,630,0.925,631,0.611,632,1.244,633,0.611,634,0.925,635,1.46,636,1.116,637,0.611,638,0.519,639,0.611,640,0.925,641,0.925,642,1.116,643,0.611,644,0.611,645,0.611,646,0.519,647,0.611,648,0.579,649,0.579,650,0.611,901,4.909,902,1.718,903,3.776,904,3.776,905,3.776,906,3.776,907,2.134,908,5.74,909,4.556,910,2.134,911,2.134,912,1.896,913,2.495,914,3.896,915,2.495,916,2.134,917,1.896,918,2.495,919,2.495,920,2.495,921,2.495,922,4.556,923,2.495,924,2.495,925,2.134,926,3.776,927,2.869,928,3.461,929,2.869,930,2.134,931,2.495,932,2.495,933,2.495,934,2.495,935,2.495,936,2.495,937,2.495]],["title/components/ObjectLoaderComponent.html",[389,0.116,505,0.707]],["body/components/ObjectLoaderComponent.html",[0,0.034,3,0.138,4,0.245,5,0.103,11,0.414,12,0.831,14,0.736,15,1.408,18,1.199,20,1.031,21,0.831,22,0.738,24,0.738,29,0.922,30,1.042,32,1.14,34,0.968,35,0.021,36,0.933,39,1.011,40,1.158,44,0.496,45,0.738,47,0.766,48,0.858,49,0.766,50,0.468,52,1.157,58,0.873,59,0.826,60,0.738,62,1.219,63,0.237,65,0.738,68,0.12,69,0.656,70,0.138,71,0.927,89,0.69,93,0.555,101,0.007,102,0.011,103,0.007,107,0.873,108,1.431,109,0.873,110,1.33,111,1.057,112,0.873,115,1.294,118,0.873,119,1.294,120,1.042,121,1.042,122,1.042,123,0.873,124,0.873,127,0.781,128,0.587,129,0.555,130,1.609,131,0.62,132,0.62,133,0.587,134,0.62,137,0.826,138,0.525,143,0.973,154,0.587,155,1.303,156,0.62,157,0.62,158,0.62,159,0.62,160,0.62,161,0.587,162,0.62,163,0.62,164,0.62,165,0.62,166,0.587,167,0.62,175,0.468,187,3.315,189,2.321,192,2.509,193,2.509,194,3.718,195,3.851,196,2.579,197,2.996,198,1.78,200,1.686,201,2.509,202,1.56,203,1.686,205,1.686,206,1.686,207,1.56,208,0.922,209,1.686,210,2.509,211,1.686,212,2.996,213,3.201,214,1.686,215,1.686,216,1.686,217,2.509,218,1.686,221,2.509,222,1.686,234,3.66,241,1.686,246,0.873,247,0.587,272,1.497,296,4.053,298,2.735,301,1.838,302,1.838,306,1.838,307,1.838,308,1.838,309,1.838,310,1.838,322,2.735,323,1.838,324,1.838,325,1.838,326,1.56,327,1.838,328,1.838,329,1.686,330,1.838,331,1.838,332,1.838,333,1.838,340,0.496,345,1.083,346,1.083,347,1.083,348,1.083,349,1.083,350,1.083,351,1.027,352,1.027,353,1.027,366,0.728,367,0.728,368,0.728,369,0.654,370,0.728,371,0.69,372,0.69,375,0.728,376,0.728,377,0.728,378,0.728,379,0.728,380,0.728,381,0.728,382,0.728,388,0.728,389,0.17,390,0.654,391,0.728,437,0.274,440,0.473,445,0.525,454,0.62,461,0.525,462,0.525,470,0.525,473,0.62,479,0.525,480,0.525,481,0.525,484,0.62,487,0.62,492,0.525,493,0.525,494,0.525,497,0.62,499,0.62,500,0.62,505,1.157,506,0.525,510,0.587,515,0.525,516,0.525,517,0.525,518,0.525,519,0.525,520,0.525,523,0.587,525,0.62,526,0.62,527,0.587,528,0.62,529,0.62,559,0.496,588,0.525,591,0.62,596,0.555,599,0.62,600,0.826,601,0.654,602,0.654,605,0.587,606,1.083,607,1.083,608,1.293,609,1.771,610,1.588,611,0.922,614,0.768,615,0.768,616,0.768,617,0.768,618,0.768,619,0.768,620,0.768,621,0.768,622,0.768,623,0.768,629,0.922,630,0.973,631,0.654,632,1.287,633,0.654,634,0.973,635,1.494,636,1.162,637,0.654,638,0.555,639,0.654,640,0.973,641,0.973,642,1.162,643,0.654,644,0.654,645,0.654,646,0.555,647,0.654,648,0.62,649,0.62,650,0.654,902,1.838,912,2.028,917,2.028,927,2.028,928,3.018,929,2.028,930,2.283,938,4.057,939,2.67,940,3.972,941,2.67,942,2.283,943,2.67,944,2.67,945,2.67,946,2.67,947,2.67,948,2.67,949,2.67,950,2.67]],["title/components/OrbitControlsComponent.html",[389,0.116,470,0.707]],["body/components/OrbitControlsComponent.html",[0,0.026,1,1.807,3,0.16,4,0.16,5,0.12,8,2.247,9,3.554,10,3.554,11,0.48,12,0.904,13,1.954,14,0.687,21,0.987,22,0.821,24,0.821,29,1.026,30,1.134,31,2.314,32,1.059,34,0.814,35,0.021,39,0.821,40,1.044,44,0.821,45,1.046,47,0.451,48,0.753,49,0.451,50,0.542,58,1.134,59,1.073,62,1.198,63,0.254,64,1.107,65,0.958,66,2.13,67,3.36,68,0.14,69,0.73,70,0.16,71,0.93,80,1.272,81,2.404,91,2.35,94,2.645,100,1.166,101,0.009,102,0.012,103,0.009,110,1.219,111,0.93,127,0.608,129,0.92,137,0.92,138,0.608,145,2.13,175,0.542,182,2.645,191,3.922,196,3.063,198,2.779,247,0.68,297,2.13,326,1.807,329,1.954,340,0.574,341,2.13,389,0.167,390,0.758,437,0.318,445,0.608,446,0.99,454,0.718,461,0.608,462,0.608,470,1.107,473,1.542,479,0.608,480,0.608,481,0.608,484,0.718,487,0.718,492,0.608,493,0.608,494,0.608,497,0.718,499,0.718,500,0.718,505,0.608,506,0.608,510,0.68,515,0.608,516,0.608,517,0.608,518,0.608,519,0.608,520,0.608,523,0.68,525,0.718,526,0.718,527,0.68,528,0.718,529,0.718,548,3.045,559,0.574,588,0.608,591,0.718,596,0.643,599,0.718,600,0.92,601,1.083,602,0.758,605,0.68,609,1.796,610,1.611,611,1.026,629,1.026,630,1.563,631,0.758,632,1.38,633,0.758,634,1.083,635,1.563,636,1.265,637,0.758,638,0.643,639,0.758,640,1.083,641,1.083,642,1.265,643,0.758,644,0.758,645,0.758,646,0.643,647,0.758,648,0.718,649,0.718,650,0.758,659,3.045,835,2.35,951,2.645,952,5.894,953,2.645,954,5.96,955,3.782,956,5.163,957,5.163,958,5.634,959,5.163,960,5.163,961,5.163,962,4.423,963,4.415,964,3.093,965,4.423,966,4.423,967,4.415,968,5.163,969,4.415,970,5.097,971,4.423,972,4.423,973,4.415,974,4.423,975,4.423,976,4.423,977,3.782,978,3.922,979,4.423,980,3.093,981,4.423,982,3.093,983,3.093,984,3.093,985,3.093,986,3.093,987,3.093,988,3.782,989,3.093,990,5.458,991,3.093,992,2.645,993,2.35,994,2.645,995,2.645,996,2.645,997,2.645,998,3.093,999,4.423,1000,3.093,1001,3.093,1002,3.093,1003,3.093,1004,3.093,1005,5.163,1006,3.093,1007,4.423,1008,4.423,1009,3.093,1010,4.423,1011,4.423,1012,3.093,1013,3.093,1014,3.093,1015,3.093,1016,3.093,1017,4.423,1018,4.423,1019,3.093,1020,3.093,1021,3.093,1022,3.093,1023,3.093,1024,3.093,1025,3.093,1026,3.093,1027,3.093,1028,2.35,1029,2.35,1030,3.36]],["title/components/PerspectiveCameraComponent.html",[389,0.116,445,0.707]],["body/components/PerspectiveCameraComponent.html",[0,0.029,1,4.209,3,0.174,4,0.174,5,0.13,11,0.523,12,0.823,13,3.887,14,0.729,15,1.332,16,4.625,17,4.625,18,1.21,19,5.593,20,1.146,21,0.947,22,0.872,23,5.004,24,0.872,25,4.017,26,4.017,27,4.017,28,4.017,29,1.09,30,1.032,31,2.424,32,1.123,34,0.948,35,0.021,36,0.662,39,0.973,40,1.169,44,0.625,45,0.872,47,0.789,48,0.897,49,0.789,50,0.59,51,4.625,52,1.395,54,4.446,58,0.74,59,0.7,60,0.625,62,0.782,63,0.244,64,1.086,68,0.152,69,0.775,70,0.174,71,0.556,82,2.881,101,0.009,102,0.013,103,0.009,107,1.032,111,0.556,130,1.538,137,0.977,138,0.662,147,2.128,169,1.831,198,2.105,247,0.74,340,0.625,389,0.175,437,0.346,440,0.56,445,1.253,454,1.255,461,0.662,462,0.662,470,0.662,473,0.782,479,0.662,480,0.662,481,0.662,484,0.782,487,0.782,492,0.662,493,0.662,494,0.662,497,0.782,499,0.782,500,0.782,505,0.662,506,0.662,510,0.74,515,0.662,516,0.662,517,0.662,518,0.662,519,0.662,520,0.662,523,0.74,525,0.782,526,0.782,527,0.74,528,0.782,529,0.782,559,0.625,588,0.662,591,0.782,596,0.7,599,0.782,600,0.977,601,0.825,602,0.825,605,0.74,606,1.281,607,1.281,608,1.475,609,1.81,610,1.623,611,1.09,629,1.09,630,1.151,631,0.825,632,1.433,633,0.825,634,1.151,635,1.602,636,1.325,637,0.825,638,0.7,639,0.825,640,1.151,641,1.151,642,1.325,643,0.825,644,0.825,645,0.825,646,0.7,647,0.825,648,0.782,649,0.782,650,0.825,1031,5.593,1032,2.881,1033,5.409,1034,5.409,1035,5.409,1036,4.698,1037,3.369,1038,3.369,1039,3.369,1040,3.369,1041,3.369,1042,3.369,1043,3.369,1044,3.369,1045,3.369,1046,3.369,1047,3.369,1048,3.369,1049,3.369,1050,3.369,1051,3.369,1052,3.369,1053,3.369,1054,3.369,1055,3.369,1056,3.369,1057,3.369,1058,3.369,1059,3.369,1060,3.369,1061,3.369,1062,3.369,1063,3.369]],["title/components/PlaneMeshComponent.html",[389,0.116,518,0.707]],["body/components/PlaneMeshComponent.html",[0,0.022,3,0.132,4,0.132,5,0.099,11,0.396,12,0.672,14,0.596,15,1.361,18,1.01,20,1.128,21,0.809,22,0.954,24,0.713,29,0.891,30,0.844,32,1.141,34,0.962,35,0.021,36,0.907,39,0.996,40,1.146,44,0.713,45,0.954,47,0.844,48,0.901,49,0.987,50,0.672,52,1.266,58,1.358,59,1.285,60,0.474,62,1.192,63,0.248,64,1.023,65,0.713,68,0.115,69,0.634,70,0.132,71,0.634,80,1.328,89,0.659,90,3.902,93,0.798,100,2.499,101,0.007,102,0.011,103,0.007,107,0.844,108,1.414,109,0.844,110,1.138,111,0.991,112,0.844,115,1.32,118,0.844,119,1.014,120,1.014,121,1.014,122,1.014,123,0.844,124,0.844,127,0.755,128,0.56,129,0.53,130,1.602,131,0.592,132,0.592,133,0.56,134,0.592,137,0.798,138,1.181,143,0.625,154,0.56,155,1.203,156,0.592,157,0.592,158,0.592,159,0.592,160,0.592,161,0.56,162,0.592,163,0.592,164,0.592,165,0.592,166,0.56,167,0.592,172,1.559,175,0.447,208,0.592,246,0.56,247,0.56,253,3.16,255,2.51,256,2.087,257,2.51,258,1.83,259,1.721,260,2.17,261,1.721,262,2.087,264,1.387,265,2.61,268,1.296,272,0.961,274,1.387,291,1.387,340,0.474,345,1.047,346,1.047,347,1.047,348,1.047,349,1.047,350,1.047,351,0.992,352,0.992,353,0.992,366,0.695,367,0.695,368,0.695,369,0.625,370,0.695,371,1.193,372,1.193,375,0.695,376,1.047,377,0.695,378,0.695,379,0.695,380,0.695,381,0.695,382,0.695,388,0.695,389,0.166,390,0.625,391,0.695,437,0.262,440,0.458,445,0.501,454,0.592,461,0.501,462,0.501,470,0.501,473,0.592,479,0.501,480,0.501,481,0.501,484,0.592,487,0.592,492,0.501,493,0.501,494,0.501,497,0.592,499,0.592,500,0.592,505,0.501,506,0.501,510,0.56,515,0.501,516,0.501,517,0.501,518,1.138,519,0.501,520,0.501,523,0.56,525,0.592,526,0.592,527,1.014,528,0.592,529,0.592,559,0.474,588,0.501,591,0.592,596,0.53,599,0.592,600,0.798,601,0.625,602,0.625,605,0.56,606,1.047,607,1.047,608,1.259,609,1.762,610,1.581,611,0.891,614,0.734,615,0.734,616,0.734,617,0.734,618,0.734,619,0.734,620,0.734,621,0.734,622,0.734,623,0.734,629,0.891,630,0.94,631,0.625,632,1.258,633,0.625,634,0.94,635,1.471,636,1.131,637,0.625,638,0.53,639,0.625,640,0.94,641,0.94,642,1.131,643,0.625,644,0.625,645,0.625,646,0.53,647,0.625,648,0.592,649,0.592,650,0.625,652,1.387,655,3.793,656,3.507,657,4.563,658,3.507,659,3.536,661,4.393,662,4.393,663,4.393,664,5.286,666,4.393,667,4.393,668,4.393,669,4.393,670,4.393,675,1.49,676,1.49,677,1.49,678,1.49,679,1.49,681,1.49,682,1.49,683,1.49,684,1.49,687,1.938,689,1.938,690,1.938,692,1.49,693,1.49,702,2.181,704,2.181,750,1.296,758,1.143,759,1.49,1064,4.95,1065,2.551,1066,2.181,1067,2.551,1068,2.551]],["title/components/PointLightComponent.html",[389,0.116,494,0.707]],["body/components/PointLightComponent.html",[0,0.025,3,0.152,4,0.152,5,0.114,11,0.457,12,0.748,14,0.663,15,1.355,18,0.987,20,1.068,21,0.879,22,0.792,24,0.792,29,0.991,30,0.938,32,1.138,34,0.967,35,0.021,36,0.987,39,0.985,40,1.128,44,0.547,45,0.792,47,0.803,48,0.889,49,0.803,50,0.516,52,1.198,58,1.21,59,1.145,60,0.932,62,1.278,63,0.248,64,1.085,65,0.792,68,0.133,69,0.704,70,0.152,71,0.486,80,0.847,89,0.761,93,0.612,100,1.893,101,0.008,102,0.012,103,0.008,107,0.938,108,1.441,109,0.938,110,1.198,111,1.038,112,0.938,115,1.382,118,0.938,119,1.103,120,1.103,121,1.103,122,1.103,123,0.938,124,0.938,127,0.839,128,0.647,129,0.612,130,1.591,131,0.683,132,0.683,133,0.647,134,0.683,137,0.887,138,0.579,143,0.721,149,1.6,154,0.647,155,1.268,156,0.683,157,0.683,158,0.683,159,0.683,160,0.683,161,0.647,162,0.683,163,0.683,164,0.683,165,0.683,166,0.647,167,0.683,172,0.994,175,0.516,208,0.683,246,0.647,247,0.647,258,2.393,278,2.237,283,3.243,340,0.547,345,1.164,346,1.164,347,1.164,348,1.164,349,1.164,350,1.164,351,1.103,352,1.103,353,1.103,366,0.803,367,0.803,368,0.803,369,0.721,370,0.803,371,0.761,372,0.761,375,0.803,376,0.803,377,0.803,378,0.803,379,0.803,380,0.803,381,0.803,382,0.803,388,0.803,389,0.178,390,0.721,391,0.803,437,0.302,440,0.509,445,0.579,454,0.683,461,0.579,462,0.579,470,0.579,473,0.683,479,0.579,480,0.579,481,0.579,484,0.683,487,0.683,492,0.579,493,0.579,494,1.198,497,1.165,499,0.683,500,0.683,505,0.579,506,0.579,510,0.647,515,0.579,516,0.579,517,0.579,518,0.579,519,0.579,520,0.579,523,0.647,525,0.683,526,0.683,527,0.647,528,0.683,529,0.683,559,0.547,588,0.579,591,0.683,596,0.612,599,0.683,600,0.887,601,0.721,602,0.721,605,0.647,606,1.164,607,1.164,608,1.369,609,1.788,610,1.604,611,0.991,614,0.847,615,0.847,616,0.847,617,0.847,618,0.847,619,0.847,620,0.847,621,0.847,622,0.847,623,0.847,629,0.991,630,1.046,631,0.721,632,1.349,633,0.721,634,1.046,635,1.54,636,1.23,637,0.721,638,0.612,639,0.721,640,1.046,641,1.046,642,1.23,643,0.721,644,0.721,645,0.721,646,0.612,647,0.721,648,0.683,649,0.683,650,0.721,748,2.027,749,3.791,750,2.551,751,3.815,753,2.939,754,2.237,755,2.237,756,2.518,758,1.32,763,2.518,765,2.518,766,2.237,772,2.518,774,2.518,775,3.815,777,3.65,778,2.518,779,2.237,814,2.518,864,2.237,1069,5.213,1070,5.021,1071,2.944,1072,2.944,1073,2.944,1074,2.944,1075,2.944,1076,2.944]],["title/pipes/Rad2DegPipe.html",[580,2.271,734,2.271]],["body/pipes/Rad2DegPipe.html",[0,0.045,3,0.275,4,0.275,5,0.206,8,2.706,14,0.827,32,0.827,34,0.728,35,0.021,39,0.776,47,0.776,48,0.982,49,0.776,52,1.397,63,0.24,68,0.24,70,0.275,101,0.015,102,0.018,103,0.015,175,0.933,294,3.667,369,1.784,580,3.989,605,1.17,710,3.667,734,3.989,735,4.046,738,4.555,741,5.401,742,5.401,743,5.401,744,4.555,746,4.555,1077,4.555,1078,6.316,1079,6.316,1080,5.326]],["title/components/SVGLoaderComponent.html",[389,0.116,506,0.707]],["body/components/SVGLoaderComponent.html",[0,0.032,3,0.13,4,0.237,5,0.097,11,0.391,12,0.802,14,0.711,15,1.398,18,1.175,20,1.009,21,0.802,22,0.706,24,0.706,29,0.882,30,0.835,32,1.145,34,0.972,35,0.021,36,0.9,39,1.001,40,1.143,44,0.467,45,0.706,47,0.744,48,0.84,49,0.744,50,0.441,52,1.3,58,1.266,59,1.198,60,0.947,62,1.184,63,0.278,64,1.11,65,0.706,68,0.114,69,0.627,70,0.13,71,0.95,80,1.093,85,1.471,89,0.651,93,0.523,101,0.007,102,0.011,103,0.007,107,0.835,108,1.423,109,0.835,110,1.314,111,0.987,112,0.835,115,1.266,118,0.835,119,1.266,120,1.006,121,1.006,122,1.006,123,0.835,124,0.835,127,0.747,128,0.553,129,0.523,130,1.601,131,0.584,132,0.584,133,0.553,134,0.584,137,0.79,138,0.495,143,0.931,154,0.553,155,1.28,156,0.584,157,0.584,158,0.584,159,0.584,160,0.584,161,0.553,162,0.584,163,0.584,164,0.584,165,0.584,166,0.553,167,0.584,172,1.284,175,0.441,187,3.251,189,2.221,192,2.401,193,2.401,194,3.638,195,3.777,196,2.49,197,2.893,198,2.053,200,1.59,201,1.59,202,1.471,203,1.59,205,1.59,206,1.59,207,1.471,208,0.882,209,1.59,210,2.401,211,1.59,212,2.893,213,3.131,214,1.59,215,1.59,216,1.59,217,2.401,218,1.59,221,2.401,222,1.59,234,3.365,241,1.59,246,0.835,247,0.553,259,2.053,260,1.935,272,1.433,277,1.733,278,1.913,296,3.965,298,2.617,301,1.733,302,1.733,306,1.733,307,1.733,308,1.733,309,1.733,310,1.733,322,3.153,323,1.733,324,1.733,325,1.733,326,1.471,327,1.733,328,1.733,329,1.59,330,1.733,331,1.733,332,1.733,333,1.733,340,0.467,345,1.036,346,1.036,347,1.036,348,1.036,349,1.036,350,1.036,351,0.983,352,0.983,353,0.983,366,0.686,367,0.686,368,0.686,369,0.617,370,0.686,371,0.651,372,0.651,375,0.686,376,0.686,377,0.686,378,0.686,379,0.686,380,0.686,381,0.686,382,0.686,388,0.686,389,0.165,390,0.617,391,0.686,437,0.259,440,0.453,445,0.495,454,0.584,461,0.495,462,0.495,470,0.495,473,0.584,479,0.495,480,0.495,481,0.495,484,0.584,487,0.584,492,0.495,493,0.495,494,0.495,497,0.584,499,0.584,500,0.584,505,0.495,506,1.132,510,1.006,515,0.495,516,0.495,517,0.495,518,0.495,519,0.495,520,0.495,523,0.553,525,0.584,526,0.584,527,0.553,528,0.584,529,0.584,559,0.467,588,0.495,591,0.584,596,0.523,599,0.584,600,0.79,601,0.617,602,0.617,605,0.553,606,1.036,607,1.036,608,1.249,609,1.759,610,1.578,611,0.882,614,0.724,615,0.724,616,0.724,617,0.724,618,0.724,619,0.724,620,0.724,621,0.724,622,0.724,623,0.724,629,0.882,630,0.931,631,0.617,632,1.25,633,0.617,634,0.931,635,1.465,636,1.122,637,0.617,638,0.523,639,0.617,640,0.931,641,0.931,642,1.122,643,0.617,644,0.617,645,0.617,646,0.523,647,0.617,648,0.584,649,0.584,650,0.617,728,1.913,758,1.128,902,1.733,910,2.153,911,2.153,912,1.913,916,2.153,917,1.913,927,1.913,928,1.913,929,1.913,942,2.153,1081,5.388,1082,4.58,1083,4.58,1084,4.58,1085,4.58,1086,2.518,1087,3.251,1088,2.518,1089,2.518,1090,2.518,1091,4.58,1092,2.518,1093,2.518,1094,1.913,1095,2.518,1096,1.913,1097,2.518,1098,2.153,1099,2.518,1100,2.518,1101,1.913,1102,2.518]],["title/components/SceneComponent.html",[389,0.116,559,0.668]],["body/components/SceneComponent.html",[0,0.025,3,0.153,4,0.153,5,0.115,11,0.46,12,0.752,14,0.666,15,1.356,18,0.991,20,1.07,21,0.883,22,0.797,24,0.797,29,0.996,30,0.943,32,1.141,34,0.968,35,0.021,36,0.991,39,0.986,40,1.13,44,0.551,45,0.797,47,0.806,48,0.891,49,0.806,50,0.519,52,1.201,58,1.288,59,1.219,60,0.936,62,1.282,63,0.249,64,1.135,65,0.797,68,0.134,69,0.708,70,0.153,71,0.832,80,0.853,89,0.766,93,0.617,101,0.008,102,0.012,103,0.008,107,0.943,108,1.442,109,0.943,110,1.201,111,1.04,112,0.943,115,1.385,118,0.943,119,1.108,120,1.108,121,1.108,122,1.108,123,0.943,124,0.943,127,0.843,128,0.652,129,0.617,130,1.593,131,0.688,132,0.688,133,0.652,134,0.688,137,0.892,138,0.583,143,0.726,154,0.652,155,1.271,156,0.688,157,0.688,158,0.688,159,0.688,160,0.688,161,0.652,162,0.688,163,0.688,164,0.688,165,0.688,166,0.652,167,0.688,172,1.002,175,0.519,208,0.688,246,1.288,247,0.652,340,0.551,345,1.17,346,1.17,347,1.17,348,1.17,349,1.17,350,1.17,351,1.109,352,1.109,353,1.109,366,0.809,367,0.809,368,0.809,369,0.726,370,0.809,371,0.766,372,0.766,375,0.809,376,0.809,377,0.809,378,0.809,379,0.809,380,0.809,381,0.809,382,0.809,388,0.809,389,0.179,390,0.726,391,0.809,437,0.305,440,0.511,445,0.583,454,0.688,461,0.583,462,0.583,470,0.583,473,0.688,479,0.583,480,0.583,481,0.583,484,0.688,487,0.688,492,0.583,493,0.583,494,0.583,497,0.688,499,0.688,500,0.688,505,0.583,506,0.583,510,0.652,515,0.583,516,0.583,517,0.583,518,0.583,519,0.583,520,0.583,523,0.652,525,0.688,526,0.688,527,0.652,528,0.688,529,0.688,559,1.135,588,0.583,591,0.688,596,0.617,599,0.688,600,0.892,601,0.726,602,0.726,605,0.652,606,1.17,607,1.17,608,1.375,609,1.789,610,1.605,611,0.996,614,0.853,615,0.853,616,0.853,617,0.853,618,0.853,619,0.853,620,0.853,621,0.853,622,0.853,623,0.853,629,0.996,630,1.051,631,0.726,632,1.353,633,0.726,634,1.051,635,1.544,636,1.235,637,0.726,638,0.617,639,0.726,640,1.051,641,1.051,642,1.235,643,0.726,644,0.726,645,0.726,646,0.617,647,0.726,648,0.688,649,0.688,650,0.726,750,1.507,753,2.954,758,1.329,759,1.732,775,3.26,1103,2.536,1104,5.042,1105,5.042,1106,5.042,1107,5.042,1108,5.042,1109,2.966,1110,2.966,1111,4.291,1112,2.966,1113,2.966,1114,3.26,1115,2.966,1116,2.966,1117,5.042,1118,2.966,1119,2.966,1120,2.966,1121,2.966,1122,2.966,1123,2.966,1124,2.966]],["title/components/SphereMeshComponent.html",[389,0.116,519,0.707]],["body/components/SphereMeshComponent.html",[0,0.023,3,0.143,4,0.143,5,0.107,11,0.429,12,0.714,14,0.632,15,1.378,18,1.05,20,1.151,21,0.848,22,0.992,24,0.756,29,0.945,30,0.895,32,1.147,34,0.983,35,0.021,36,0.951,39,1.009,40,1.167,44,0.756,45,0.992,47,0.869,48,0.922,49,0.869,50,0.714,52,1.325,58,1.174,59,1.111,60,0.513,62,1.24,63,0.241,64,0.992,65,0.756,68,0.125,69,0.672,70,0.143,71,0.672,80,1.392,89,0.714,93,0.847,101,0.008,102,0.011,103,0.008,107,0.895,108,1.426,109,0.895,110,1.172,111,1.017,112,0.895,115,1.355,118,0.895,119,1.063,120,1.063,121,1.063,122,1.063,123,0.895,124,0.895,127,0.801,128,0.607,129,0.574,130,1.613,131,0.641,132,0.641,133,0.607,134,0.641,137,0.847,138,1.212,143,0.677,154,0.607,155,1.239,156,0.641,157,0.641,158,0.641,159,0.641,160,0.641,161,0.607,162,0.641,163,0.641,164,0.641,165,0.641,166,0.607,167,0.641,172,1.635,175,0.484,208,0.641,246,0.607,247,0.607,253,3.213,255,2.631,256,2.215,257,2.631,258,1.942,259,1.826,260,2.257,261,1.826,262,2.215,264,1.502,265,2.715,268,1.404,272,1.041,274,1.502,291,1.502,340,0.513,345,1.111,346,1.111,347,1.111,348,1.111,349,1.111,350,1.111,351,1.053,352,1.053,353,1.053,366,0.753,367,0.753,368,0.753,369,0.677,370,0.753,371,0.714,372,0.714,375,0.753,376,1.111,377,0.753,378,0.753,379,0.753,380,0.753,381,0.753,382,0.753,388,0.753,389,0.173,390,0.677,391,0.753,437,0.284,440,0.486,445,0.543,454,0.641,461,0.543,462,0.543,470,0.543,473,0.641,479,0.543,480,0.543,481,0.543,484,0.641,487,0.641,492,0.543,493,0.543,494,0.543,497,0.641,499,0.641,500,0.641,505,0.543,506,0.543,510,0.607,515,0.543,516,0.543,517,0.543,518,0.543,519,1.172,520,0.543,523,0.607,525,0.641,526,0.641,527,0.607,528,1.123,529,0.641,559,0.513,588,0.543,591,0.641,596,0.574,599,0.641,600,0.847,601,0.677,602,0.677,605,0.607,606,1.111,607,1.111,608,1.32,609,1.777,610,1.594,611,0.945,614,0.794,615,0.794,616,0.794,617,0.794,618,0.794,619,0.794,620,0.794,621,0.794,622,0.794,623,0.794,629,0.945,630,0.998,631,0.677,632,1.309,633,0.677,634,0.998,635,1.51,636,1.186,637,0.677,638,0.574,639,0.677,640,0.998,641,0.998,642,1.186,643,0.677,644,0.677,645,0.677,646,0.574,647,0.677,648,0.641,649,0.641,650,0.677,652,1.502,658,3.677,673,2.099,675,1.614,676,1.614,677,1.614,678,1.614,679,1.614,681,1.614,682,1.614,683,1.614,684,1.614,689,2.099,692,1.614,693,1.614,708,2.099,1125,4.872,1126,4.84,1127,4.139,1128,2.762,1129,2.762,1130,2.762,1131,2.762,1132,2.762]],["title/components/TorusMeshComponent.html",[389,0.116,520,0.707]],["body/components/TorusMeshComponent.html",[0,0.022,3,0.134,4,0.134,5,0.1,11,0.403,12,0.682,14,0.604,15,1.365,18,1.019,20,1.134,21,0.818,22,0.962,24,0.723,29,0.903,30,0.855,31,2.092,32,1.146,34,0.972,35,0.021,36,0.917,39,0.999,40,1.151,44,0.723,45,0.962,47,0.85,48,0.906,49,0.85,50,0.682,52,1.272,58,1.366,59,1.292,60,0.482,62,1.203,63,0.234,64,1.082,65,0.723,68,0.117,69,0.642,70,0.134,71,0.642,80,1.342,89,0.671,93,0.809,100,1.954,101,0.007,102,0.011,103,0.007,107,0.855,108,1.417,109,0.855,110,1.146,111,0.997,112,0.855,115,1.328,118,0.855,119,1.026,120,1.026,121,1.026,122,1.026,123,0.855,124,0.855,127,0.765,128,0.571,129,0.54,130,1.605,131,0.603,132,0.603,133,0.571,134,0.603,137,0.809,138,1.188,143,0.636,154,0.571,155,1.212,156,0.603,157,0.603,158,0.603,159,0.603,160,0.603,161,0.571,162,0.603,163,0.603,164,0.603,165,0.603,166,0.571,167,0.603,169,1.412,172,1.576,175,0.455,208,0.603,246,0.571,247,0.571,253,3.172,255,2.537,256,2.116,257,2.537,258,1.855,259,1.744,260,2.19,261,1.744,262,2.116,264,1.412,265,2.634,268,1.32,272,0.979,274,1.412,291,1.412,340,0.482,345,1.061,346,1.061,347,1.061,348,1.061,349,1.061,350,1.061,351,1.006,352,1.006,353,1.006,366,0.708,367,0.708,368,0.708,369,0.636,370,0.708,371,0.671,372,0.671,375,0.708,376,1.061,377,0.708,378,0.708,379,0.708,380,0.708,381,0.708,382,0.708,388,0.708,389,0.168,390,0.636,391,0.708,437,0.267,440,0.464,445,0.511,454,0.603,461,0.511,462,0.511,470,0.511,473,0.603,479,0.511,480,0.511,481,0.511,484,0.603,487,0.603,492,0.511,493,0.511,494,0.511,497,0.603,499,0.603,500,0.603,505,0.511,506,0.511,510,0.571,515,0.511,516,0.511,517,0.511,518,0.511,519,0.511,520,1.146,523,0.571,525,0.603,526,0.603,527,0.571,528,0.603,529,1.402,559,0.482,588,0.511,591,0.603,596,0.54,599,0.603,600,0.809,601,0.636,602,0.636,605,0.571,606,1.061,607,1.061,608,1.273,609,1.765,610,1.584,611,0.903,614,0.747,615,0.747,616,0.747,617,0.747,618,0.747,619,0.747,620,0.747,621,0.747,622,0.747,623,0.747,629,0.903,630,0.953,631,0.636,632,1.27,633,0.636,634,0.953,635,1.48,636,1.143,637,0.636,638,0.54,639,0.636,640,0.953,641,0.953,642,1.143,643,0.636,644,0.636,645,0.636,646,0.54,647,0.636,648,0.603,649,0.603,650,0.636,652,1.412,675,1.518,676,1.518,677,1.518,678,1.518,679,1.518,681,1.518,682,1.518,683,1.518,684,1.518,692,1.518,693,1.518,696,3.991,701,2.222,703,2.222,705,2.957,707,2.222,709,2.458,710,2.68,717,3.329,728,3.938,1066,3.329,1127,5.168,1133,5.315,1134,4.668,1135,6.043,1136,4.668,1137,2.598,1138,3.892,1139,2.957,1140,2.598,1141,2.598,1142,2.598,1143,3.892,1144,3.892,1145,2.598]],["title/components/WebGLRendererComponent.html",[389,0.116,588,0.707]],["body/components/WebGLRendererComponent.html",[0,0.019,1,1.288,3,0.114,4,0.114,5,0.085,8,1.745,9,2.904,11,0.342,12,0.602,13,2.169,14,0.533,20,1.106,21,0.834,24,0.638,30,1.201,31,1.891,32,1.098,34,0.806,35,0.021,39,0.904,40,0.999,47,0.615,48,0.752,49,0.615,52,0.675,54,1.676,58,1.134,59,0.99,60,1.059,63,0.247,64,0.884,65,0.958,66,1.519,68,0.099,69,0.567,70,0.114,71,0.852,80,1.641,85,2.782,100,2.151,101,0.006,102,0.01,103,0.006,110,1.42,111,0.364,127,0.829,137,0.714,138,0.434,149,2.805,155,0.99,172,2.221,175,1.062,191,4.152,196,2.588,198,1.539,208,0.512,245,1.886,246,0.755,247,0.485,272,1.59,297,2.904,299,2.937,326,2.782,340,0.409,351,0.57,352,0.57,353,0.57,371,1.09,372,1.412,389,0.137,390,1.166,437,0.227,445,0.434,446,1.099,454,0.512,461,0.434,462,0.434,470,0.434,473,1.105,479,0.434,480,0.434,481,0.434,484,0.512,487,0.512,492,0.434,493,0.434,494,0.434,497,0.512,499,0.512,500,0.512,505,0.434,506,0.434,510,0.485,515,0.434,516,0.434,517,0.434,518,0.434,519,0.434,520,0.434,523,0.485,525,0.512,526,0.512,527,0.485,528,0.512,529,0.512,548,1.519,551,1.886,559,0.884,588,0.936,591,1.438,596,0.459,599,0.512,600,0.714,601,0.54,602,0.54,605,0.485,609,1.733,610,1.554,611,0.512,612,3.205,629,0.797,630,1.166,631,0.54,632,1.166,633,0.54,634,0.841,635,1.398,636,1.033,637,0.54,638,0.459,639,0.54,640,0.841,641,0.841,642,1.033,643,0.54,644,0.54,645,0.54,646,0.459,647,0.841,648,1.407,649,0.512,650,0.54,655,3.007,657,1.676,709,2.169,768,2.904,835,2.609,848,2.609,864,1.676,885,1.886,951,1.886,955,2.937,963,4.879,967,3.607,969,2.937,970,3.607,973,2.937,988,2.937,992,1.886,993,3.617,994,2.937,995,2.937,996,2.937,997,4.072,1028,1.676,1029,1.676,1030,3.617,1101,1.676,1146,6.068,1147,1.886,1148,4.218,1149,3.435,1150,3.435,1151,4.218,1152,4.218,1153,4.218,1154,4.218,1155,4.218,1156,4.218,1157,4.218,1158,4.761,1159,3.435,1160,3.435,1161,3.435,1162,4.761,1163,4.761,1164,4.218,1165,4.218,1166,4.218,1167,3.435,1168,3.435,1169,3.435,1170,3.435,1171,4.218,1172,4.879,1173,3.435,1174,2.206,1175,4.218,1176,2.206,1177,4.218,1178,5.3,1179,2.206,1180,2.206,1181,2.206,1182,2.206,1183,2.206,1184,2.206,1185,2.206,1186,3.435,1187,2.206,1188,3.435,1189,2.206,1190,3.435,1191,2.206,1192,2.206,1193,2.206,1194,3.435,1195,2.206,1196,2.206,1197,2.206,1198,2.206,1199,3.435,1200,3.435,1201,2.206,1202,3.607,1203,2.206,1204,4.218,1205,2.206,1206,4.218,1207,2.206,1208,3.435,1209,2.206,1210,2.206,1211,2.206,1212,2.206,1213,2.206,1214,3.435,1215,3.435,1216,3.435,1217,3.435,1218,3.435,1219,2.206,1220,2.206,1221,2.206,1222,2.206,1223,2.206,1224,2.206,1225,2.206,1226,2.206,1227,2.206,1228,1.886,1229,2.206,1230,2.206,1231,3.435,1232,3.435,1233,1.886,1234,1.886,1235,2.206,1236,2.206,1237,4.761,1238,2.206,1239,2.206,1240,3.435,1241,2.206,1242,3.435,1243,2.206,1244,2.206,1245,2.206,1246,2.206,1247,2.206,1248,2.206,1249,2.206,1250,2.206,1251,2.206,1252,2.206,1253,2.206,1254,2.206,1255,2.206,1256,2.206,1257,2.206,1258,2.206,1259,4.761,1260,2.206,1261,3.435,1262,2.206,1263,2.206,1264,2.206,1265,2.206,1266,2.206,1267,2.206,1268,3.435,1269,2.206,1270,2.206,1271,2.206,1272,2.206,1273,3.435,1274,3.435,1275,3.435,1276,2.206,1277,2.206,1278,2.206,1279,2.206,1280,3.435,1281,3.435,1282,2.206,1283,2.206,1284,2.206,1285,2.206,1286,2.206,1287,2.206,1288,2.206,1289,2.206,1290,2.206,1291,2.206,1292,2.206,1293,2.206,1294,2.206,1295,2.206,1296,2.206,1297,2.206,1298,2.206,1299,2.206,1300,2.206,1301,2.206,1302,2.206,1303,2.206,1304,2.206,1305,2.206,1306,2.206,1307,2.206,1308,3.435,1309,5.16,1310,3.435,1311,2.206,1312,2.206,1313,2.206,1314,2.206,1315,2.206,1316,2.206,1317,2.206,1318,2.206,1319,2.206,1320,2.206,1321,2.206,1322,3.435,1323,2.206,1324,2.206,1325,3.435,1326,2.206,1327,2.206,1328,2.206,1329,2.206,1330,2.206,1331,3.435,1332,2.206]],["title/changelog.html",[1333,2.279,1334,2.279,1335,2.566]],["body/changelog.html",[5,0.189,20,0.856,35,0.017,50,0.856,71,1.071,101,0.014,102,0.017,103,0.014,147,3.086,236,4.178,297,4.466,339,3.712,389,0.158,523,1.074,527,1.074,600,1.247,610,1.486,649,1.134,749,3.364,821,3.712,841,5.127,848,3.712,977,4.178,978,3.712,993,4.555,1114,3.712,1233,4.178,1335,5.547,1336,5.784,1337,4.886,1338,5.784,1339,4.886,1340,4.886,1341,4.886,1342,4.886,1343,4.886,1344,4.886,1345,4.886,1346,4.886,1347,4.886,1348,6.764,1349,4.886,1350,4.886,1351,6.487,1352,4.886,1353,4.178,1354,4.886,1355,4.886,1356,4.178,1357,4.178,1358,4.886,1359,4.886,1360,4.886,1361,4.886,1362,4.178,1363,4.886,1364,4.886,1365,6.487,1366,5.127,1367,4.886,1368,6.487,1369,4.886,1370,6.487,1371,4.886,1372,6.487,1373,4.886,1374,4.886,1375,4.886,1376,4.886,1377,4.886,1378,4.886,1379,4.886,1380,5.996,1381,4.886,1382,4.886,1383,4.886,1384,4.178,1385,4.886,1386,4.886,1387,4.886,1388,4.886,1389,4.886,1390,4.178,1391,5.127,1392,4.886,1393,4.886,1394,4.886,1395,4.178,1396,4.886,1397,4.886,1398,4.886,1399,4.178,1400,4.886,1401,4.886,1402,4.886,1403,4.886,1404,5.996,1405,4.886,1406,4.886]],["title/coverage.html",[1407,4.203]],["body/coverage.html",[0,0.057,1,2.4,5,0.159,6,3.514,7,3.514,34,0.561,35,0.021,71,0.678,85,4.162,101,0.011,102,0.015,103,0.011,104,2.595,105,3.514,106,3.514,108,0.808,111,0.887,137,0.854,138,0.808,187,2.233,188,4.081,189,2.4,190,4.121,213,2.233,234,2.4,253,1.958,254,3.514,277,2.829,292,3.514,293,3.514,340,0.763,389,0.242,445,0.808,461,0.808,462,0.808,470,0.808,479,0.808,480,0.808,481,0.808,492,0.808,493,0.808,494,0.808,505,0.808,506,0.808,515,0.808,516,0.808,517,0.808,518,0.808,519,0.808,520,0.808,559,0.763,579,2.595,580,2.595,588,0.808,596,0.854,603,3.514,604,4.081,638,0.854,646,0.854,651,3.514,652,3.742,694,3.514,705,4.548,726,4.594,734,3.393,736,3.514,747,3.514,748,4.121,758,1.841,768,3.699,780,3.514,785,3.514,789,3.514,802,3.514,810,3.514,819,3.514,820,4.081,852,3.514,901,3.514,902,4.121,938,3.514,952,3.514,953,3.514,1031,3.514,1032,3.514,1064,3.514,1069,3.514,1077,3.514,1081,3.514,1094,3.121,1096,3.121,1103,3.514,1114,5.305,1125,3.514,1133,3.514,1139,3.121,1146,3.514,1147,3.514,1366,3.514,1407,3.514,1408,3.121,1409,4.109,1410,4.109,1411,4.109,1412,5.372,1413,4.109,1414,4.109,1415,4.109,1416,4.109,1417,4.109,1418,4.109,1419,5.372,1420,4.109,1421,4.109,1422,4.109,1423,4.109,1424,6.348,1425,4.109,1426,4.109,1427,4.109,1428,5.372,1429,5.372,1430,4.109,1431,4.109,1432,4.109,1433,4.109,1434,4.109,1435,4.109,1436,4.109,1437,4.109,1438,4.109,1439,4.109,1440,5.372,1441,4.109,1442,5.372,1443,4.109,1444,4.109,1445,4.109,1446,4.109,1447,6.588,1448,4.109,1449,4.594,1450,3.514,1451,6.588,1452,5.372,1453,3.514,1454,3.514,1455,3.514,1456,3.514,1457,3.514,1458,3.514,1459,3.514,1460,3.514,1461,4.109,1462,4.109]],["title/dependencies.html",[436,1.385,1463,3]],["body/dependencies.html",[35,0.021,68,0.246,69,0.9,101,0.015,102,0.018,103,0.015,436,1.745,453,2.055,844,4.663,876,4.143,1228,4.663,1464,5.453,1465,7.369,1466,5.453,1467,5.453,1468,6.404,1469,4.866,1470,5.453,1471,5.453,1472,6.404,1473,5.453,1474,6.404,1475,5.453,1476,5.453,1477,5.453,1478,5.453,1479,5.453,1480,5.453,1481,5.453,1482,5.453]],["title/miscellaneous/functions.html",[1483,2.566,1484,3.7]],["body/miscellaneous/functions.html",[11,0.778,34,0.685,35,0.021,39,0.956,47,1.019,48,1.036,49,1.019,52,1.29,58,1.101,59,1.042,64,0.931,98,5.208,101,0.014,102,0.017,103,0.014,259,2.73,260,2.573,261,2.247,268,2.547,272,1.89,277,4.193,294,4.193,549,4.287,553,4.287,653,4.287,750,3.467,758,2.73,1094,4.627,1096,4.627,1101,4.984,1449,5.208,1450,5.208,1453,5.208,1454,4.287,1455,5.208,1456,5.208,1457,4.287,1458,5.208,1459,4.287,1460,5.208,1483,4.287,1484,4.287,1485,6.091,1486,5.013,1487,5.013,1488,5.013,1489,5.013,1490,6.091,1491,6.561,1492,6.091,1493,6.561,1494,5.013,1495,6.091,1496,6.091,1497,5.013,1498,5.013,1499,5.013,1500,5.013,1501,5.013,1502,5.013,1503,5.013]],["title/index.html",[11,0.466,1333,2.279,1334,2.279]],["body/index.html",[13,2.941,35,0.021,63,0.263,69,0.768,85,2.72,91,3.538,93,0.968,101,0.013,102,0.016,103,0.013,246,1.279,339,4.823,341,3.206,433,0.768,456,1.661,530,3.4,559,0.865,600,1.423,610,1.534,611,1.351,629,1.081,648,1.081,655,3.676,768,4.007,876,3.538,914,3.982,978,5.053,990,3.982,1028,3.538,1029,3.538,1030,3.538,1087,3.982,1098,3.982,1172,3.982,1234,4.977,1336,5.854,1338,4.977,1353,3.982,1356,3.982,1357,3.982,1362,5.854,1384,3.982,1390,4.977,1391,3.982,1395,3.982,1399,5.429,1408,4.823,1469,3.538,1504,4.657,1505,4.657,1506,4.657,1507,4.657,1508,6.983,1509,4.657,1510,3.982,1511,5.82,1512,4.657,1513,4.657,1514,4.657,1515,4.657,1516,4.657,1517,4.657,1518,5.82,1519,4.657,1520,4.657,1521,4.657,1522,4.657,1523,4.657,1524,4.657,1525,4.657,1526,4.657,1527,5.82,1528,4.657,1529,4.657,1530,3.982,1531,4.657,1532,4.657,1533,4.657,1534,4.657,1535,4.657,1536,4.657,1537,4.657,1538,4.657,1539,4.657,1540,4.657,1541,4.657,1542,5.82,1543,4.657,1544,4.657,1545,4.657,1546,4.657,1547,6.349,1548,4.657,1549,4.657,1550,4.657,1551,4.657,1552,4.657,1553,4.657,1554,4.657,1555,4.657,1556,4.657,1557,4.657,1558,4.657,1559,4.657,1560,4.657,1561,4.657,1562,4.657,1563,3.982,1564,4.657,1565,4.657,1566,4.657,1567,4.657,1568,4.657]],["title/license.html",[1333,2.279,1334,2.279,1569,2.566]],["body/license.html",[35,0.017,95,6.279,101,0.014,102,0.017,103,0.014,207,3.002,448,1.736,907,4.395,925,5.671,1178,4.395,1202,4.395,1408,3.905,1510,4.395,1530,5.287,1563,4.395,1569,4.395,1570,5.14,1571,6.632,1572,5.14,1573,5.14,1574,5.14,1575,5.14,1576,6.183,1577,5.14,1578,5.14,1579,5.14,1580,5.14,1581,5.14,1582,6.183,1583,5.14,1584,5.14,1585,5.14,1586,6.183,1587,5.14,1588,5.14,1589,5.14,1590,5.14,1591,5.14,1592,5.14,1593,5.14,1594,5.14,1595,5.14,1596,6.183,1597,5.14,1598,5.14,1599,5.14,1600,5.14,1601,5.14,1602,5.14,1603,6.183,1604,6.183,1605,5.14,1606,5.14,1607,5.14,1608,5.14,1609,5.14,1610,5.14,1611,5.14,1612,5.14,1613,5.14,1614,5.14,1615,5.14,1616,5.14,1617,5.14,1618,5.14,1619,5.14,1620,5.14,1621,5.14,1622,5.14,1623,5.14,1624,5.14,1625,5.14,1626,5.14,1627,5.14,1628,5.14,1629,5.14,1630,5.14,1631,5.14]],["title/modules.html",[435,1.573]],["body/modules.html",[35,0.018,101,0.015,102,0.018,103,0.015,434,3.374,435,1.709,457,3.374,466,3.374,475,3.374,488,3.374,501,3.374,510,1.647,511,3.374,530,3.121,534,3.374,535,3.374,543,3.374,560,3.374,721,3.678,1469,5.696,1632,7.497,1633,7.497]],["title/overview.html",[1634,4.203]],["body/overview.html",[2,1.776,35,0.021,101,0.009,102,0.013,103,0.009,340,1.204,433,0.539,434,4.307,435,1.045,436,1.045,437,0.336,438,1.165,439,1.165,440,0.389,441,1.165,442,2.794,443,2.794,444,2.794,445,1.275,446,1.471,447,1.165,448,1.103,457,4.431,458,2.794,459,2.794,460,2.794,461,1.275,462,1.275,466,4.307,467,2.794,468,2.794,469,2.794,470,1.275,475,4.512,476,2.794,477,2.794,478,2.794,479,1.275,480,1.275,481,1.275,488,4.512,489,2.794,490,2.794,491,2.794,492,1.275,493,1.275,494,1.275,501,4.512,502,2.794,503,2.794,504,2.794,505,1.275,506,1.275,511,4.644,512,2.794,513,2.794,514,2.794,515,1.275,516,1.275,517,1.275,518,1.275,519,1.275,520,1.275,530,4.152,531,2.794,532,2.794,533,2.794,534,4.67,535,4.307,543,4.181,555,2.794,556,2.794,557,2.794,558,2.794,559,1.204,560,4.307,576,2.794,577,2.794,578,2.794,579,4.095,580,4.095,585,2.794,586,2.794,587,2.794,588,1.275,593,2.794,594,2.794,595,2.794,596,1.348,600,0.679,638,1.348,646,1.348,709,2.063,721,4.696,722,2.794,723,2.794,725,2.794,735,2.482,1139,2.482,1634,2.794,1635,3.267,1636,3.267]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":85,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/SVGLoaderComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"index.html":{}}}],["0,0,0",{"_index":760,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":711,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["0.0.0",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":1380,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1368,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":779,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{}}}],["0.05",{"_index":890,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.1",{"_index":773,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["0.1.0",{"_index":1364,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["0.108.0",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":1138,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":864,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["0/1",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":1365,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1350,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1349,"title":{},"body":{"changelog.html":{}}}],["0x444444",{"_index":813,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x5dade2",{"_index":274,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["0xa0a0a0",{"_index":1111,"title":{},"body":{"components/SceneComponent.html":{}}}],["0xffff00",{"_index":822,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["0xffffff",{"_index":753,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["1",{"_index":100,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["1.0",{"_index":659,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["1.0.2",{"_index":1347,"title":{},"body":{"changelog.html":{}}}],["1.2",{"_index":981,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1114,"title":{},"body":{"components/SceneComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["100",{"_index":768,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"index.html":{}}}],["1024",{"_index":777,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1635,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1366,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["180",{"_index":746,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":709,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"overview.html":{}}}],["2.0",{"_index":792,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/20",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":789,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["2017",{"_index":1573,"title":{},"body":{"license.html":{}}}],["2019",{"_index":1348,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1636,"title":{},"body":{"overview.html":{}}}],["3.2.1",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["3/26",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["3/27",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["3/28",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["3/29",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["3/30",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["3/37",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["3/43",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["379579926",{"_index":900,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["39",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":93,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"index.html":{}}}],["3d.ts",{"_index":190,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"coverage.html":{}}}],["3d.ts:109",{"_index":358,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:118",{"_index":359,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:12",{"_index":275,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:126",{"_index":356,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:130",{"_index":365,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:134",{"_index":360,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:138",{"_index":357,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:141",{"_index":362,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:15",{"_index":270,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:16",{"_index":354,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:17",{"_index":204,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:18",{"_index":276,"title":{},"body":{"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{}}}],["3d.ts:21",{"_index":271,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:22",{"_index":199,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:23",{"_index":267,"title":{},"body":{"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{}}}],["3d.ts:24",{"_index":373,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:25",{"_index":374,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:27",{"_index":266,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:28",{"_index":220,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:30",{"_index":219,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractObject3D.html":{}}}],["3d.ts:31",{"_index":383,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:32",{"_index":269,"title":{},"body":{"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{}}}],["3d.ts:36",{"_index":225,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:37",{"_index":387,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:39",{"_index":385,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:40",{"_index":386,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:41",{"_index":384,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:43",{"_index":355,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:45",{"_index":364,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:49",{"_index":263,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:56",{"_index":224,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:62",{"_index":223,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["3d.ts:66",{"_index":363,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3d.ts:9",{"_index":273,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["3d.ts:95",{"_index":361,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["3ds",{"_index":97,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["4/35",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["5.2.0",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["5/35",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["5/40",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["5/45",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":775,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["6",{"_index":1139,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["6.5.3",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["6/49",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["6/57",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["6/58",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["7/35",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["7/38",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["7/41",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":705,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["8.2.6",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["8/38",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["9/40",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":944,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_model",{"_index":298,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["above",{"_index":1602,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":18,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractcamera",{"_index":1,"title":{"classes/AbstractCamera.html":{}},"body":{"classes/AbstractCamera.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["abstractcamera:10",{"_index":1041,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:12",{"_index":1042,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:14",{"_index":1043,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:20",{"_index":1049,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:28",{"_index":1048,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:30",{"_index":1051,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:32",{"_index":1050,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:46",{"_index":1046,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:56",{"_index":1047,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:6",{"_index":1052,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:8",{"_index":1039,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:9",{"_index":1040,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractconnector",{"_index":104,"title":{"classes/AbstractConnector.html":{}},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["abstractconnector:11",{"_index":825,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:18",{"_index":831,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:25",{"_index":833,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:35",{"_index":830,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:49",{"_index":829,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:55",{"_index":832,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractconnector:8",{"_index":824,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractions",{"_index":1363,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":187,"title":{"classes/AbstractLazyObject3D.html":{}},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d:109",{"_index":313,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:118",{"_index":314,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:126",{"_index":311,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:130",{"_index":320,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:134",{"_index":315,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:138",{"_index":312,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:141",{"_index":317,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:16",{"_index":303,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:17",{"_index":302,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:18",{"_index":305,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:22",{"_index":301,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:28",{"_index":307,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:30",{"_index":306,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:36",{"_index":310,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:43",{"_index":304,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:45",{"_index":319,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:56",{"_index":309,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:62",{"_index":308,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractlazyobject3d:66",{"_index":318,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:95",{"_index":316,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["abstractmesh",{"_index":253,"title":{"classes/AbstractMesh.html":{}},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["abstractmesh:12",{"_index":678,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:15",{"_index":675,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:18",{"_index":679,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:21",{"_index":676,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:23",{"_index":683,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:27",{"_index":682,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:32",{"_index":684,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:49",{"_index":681,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:9",{"_index":677,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmodelloader",{"_index":213,"title":{"classes/AbstractModelLoader.html":{}},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["abstractmodelloader#afterinit",{"_index":227,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["abstractmodelloader:11",{"_index":917,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractmodelloader:20",{"_index":912,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":108,"title":{"classes/AbstractObject3D.html":{}},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["abstractobject3d#addchild",{"_index":228,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["abstractobject3d.renderer",{"_index":218,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d:109",{"_index":158,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:118",{"_index":159,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:126",{"_index":156,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:130",{"_index":167,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:134",{"_index":160,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:138",{"_index":157,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:141",{"_index":163,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:16",{"_index":131,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:18",{"_index":134,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:23",{"_index":614,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:24",{"_index":615,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:25",{"_index":616,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:30",{"_index":617,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:31",{"_index":618,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:32",{"_index":619,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:37",{"_index":623,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:39",{"_index":621,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:40",{"_index":622,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:41",{"_index":620,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:43",{"_index":132,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:45",{"_index":165,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:66",{"_index":164,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractobject3d:95",{"_index":162,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["accessed",{"_index":216,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["accessors",{"_index":299,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/WebGLRendererComponent.html":{}}}],["acquisition",{"_index":235,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["action",{"_index":1625,"title":{},"body":{"license.html":{}}}],["actor'},{'name",{"_index":640,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["actor.component",{"_index":731,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["actor.component.ts",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["actor.module.ts",{"_index":729,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["actual_component",{"_index":650,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["add",{"_index":245,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"components/WebGLRendererComponent.html":{}}}],["addchild",{"_index":118,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["addchild(object",{"_index":154,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["added",{"_index":1351,"title":{},"body":{"changelog.html":{}}}],["adheres",{"_index":1343,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":1374,"title":{},"body":{"changelog.html":{}}}],["afterinit",{"_index":119,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["afterviewinit",{"_index":9,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["akimenko",{"_index":1575,"title":{},"body":{"license.html":{}}}],["along",{"_index":669,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["already",{"_index":1378,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":848,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":1594,"title":{},"body":{"license.html":{}}}],["angles",{"_index":368,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["angular",{"_index":1362,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":453,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":68,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":854,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["animated",{"_index":855,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["animationincrement",{"_index":856,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["antialias",{"_index":1256,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["anything",{"_index":1001,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["api",{"_index":1390,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":1505,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":758,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":1489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this.color",{"_index":762,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.groundcolor",{"_index":817,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":818,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":839,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":816,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":277,"title":{},"body":{"classes/AbstractMesh.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":1494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":279,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["applymaterial",{"_index":255,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["applyposition",{"_index":16,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["applyrotation",{"_index":120,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["applyshadowprops",{"_index":256,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["applyshadowprops(mesh",{"_index":264,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["applytranslation",{"_index":121,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["applyzaxisup",{"_index":17,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["arc",{"_index":1134,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":996,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["arguments",{"_index":1177,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["arising",{"_index":1629,"title":{},"body":{"license.html":{}}}],["array",{"_index":1190,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["aspect",{"_index":54,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["aspectratio",{"_index":1055,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["associated",{"_index":1583,"title":{},"body":{"license.html":{}}}],["async",{"_index":194,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["atft",{"_index":610,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":733,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["atftcameramodule",{"_index":434,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":457,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":466,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":475,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":488,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":501,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":511,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":530,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/DataCenterActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":534,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":543,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":535,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":560,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":1619,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1004,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["axes",{"_index":484,"title":{},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["axeshelpercomponent",{"_index":479,"title":{"components/AxesHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":90,"title":{},"body":{"classes/AbstractCamera.html":{},"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["background",{"_index":1104,"title":{},"body":{"components/SceneComponent.html":{}}}],["based",{"_index":1341,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1087,"title":{},"body":{"components/SVGLoaderComponent.html":{},"index.html":{}}}],["behaviour",{"_index":1287,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["below",{"_index":1513,"title":{},"body":{"index.html":{}}}],["between",{"_index":1247,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["binding",{"_index":1491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":1395,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":948,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["blender",{"_index":96,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["blending",{"_index":887,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["body",{"_index":1539,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":439,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["box",{"_index":523,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":515,"title":{"components/BoxMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":1633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1469,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":943,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":1542,"title":{},"body":{"index.html":{}}}],["bye",{"_index":1231,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["c",{"_index":1572,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":150,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["calculateaspectratio",{"_index":1158,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["calculatesize",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":210,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["camera",{"_index":13,"title":{},"body":{"classes/AbstractCamera.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["camera'},{'name",{"_index":644,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["camera.component",{"_index":455,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1032,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:12",{"_index":1037,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:13",{"_index":1038,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:14",{"_index":1036,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:21",{"_index":1044,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:32",{"_index":1045,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.module",{"_index":538,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":450,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.ts",{"_index":7,"title":{},"body":{"classes/AbstractCamera.html":{},"coverage.html":{}}}],["camera.ts:10",{"_index":57,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:12",{"_index":61,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:14",{"_index":33,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:20",{"_index":43,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:28",{"_index":42,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:30",{"_index":53,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:32",{"_index":46,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:46",{"_index":38,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:56",{"_index":41,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:6",{"_index":37,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:8",{"_index":55,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.ts:9",{"_index":56,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["camera.updateaspectratio(aspect",{"_index":1299,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["camera/abstract",{"_index":992,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["camera/atft",{"_index":537,"title":{},"body":{"modules/AtftModule.html":{}}}],["cameracomponent",{"_index":1274,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["cameracomponent.camera",{"_index":1280,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["cameracomponents",{"_index":1151,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["canvas",{"_index":1172,"title":{},"body":{"components/WebGLRendererComponent.html":{},"index.html":{}}}],["canvasref",{"_index":1152,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["case",{"_index":549,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["castshadow",{"_index":258,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["catch(err",{"_index":249,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["center",{"_index":728,"title":{},"body":{"modules/DataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"components/TorusMeshComponent.html":{}}}],["center.ts",{"_index":1458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/data",{"_index":727,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["center/layer/layer",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["center/server/server",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["centered",{"_index":1082,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["changed",{"_index":145,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changelog",{"_index":1335,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":50,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["changes['listeningcontrolelement",{"_index":1012,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["changes['rotatespeed",{"_index":1006,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1009,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":1579,"title":{},"body":{"license.html":{}}}],["child",{"_index":410,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["childcameras",{"_index":957,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["childnodes",{"_index":109,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["claim",{"_index":1622,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{}},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"overview.html":{}}}],["click",{"_index":1512,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1543,"title":{},"body":{"index.html":{}}}],["cluster_atftcameramodule",{"_index":442,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":443,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":444,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":458,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":459,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":460,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":467,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":468,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":469,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":476,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":477,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":478,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":489,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":490,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":491,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":502,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":503,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":504,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":512,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":513,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":514,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":531,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":533,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":532,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":555,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":556,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":558,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":557,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":576,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":577,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":578,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":585,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":586,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":587,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":593,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":594,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":595,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_datacenteractormodule",{"_index":722,"title":{},"body":{"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["cluster_datacenteractormodule_declarations",{"_index":723,"title":{},"body":{"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["cluster_datacenteractormodule_exports",{"_index":725,"title":{},"body":{"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["cluster_datacenteractormodule_imports",{"_index":724,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["code",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":750,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":1450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":1559,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":452,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{}}}],["component",{"_index":389,"title":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["component_template",{"_index":633,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["components",{"_index":600,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["conditions",{"_index":1601,"title":{},"body":{"license.html":{}}}],["config",{"_index":1550,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":1381,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1630,"title":{},"body":{"license.html":{}}}],["connector",{"_index":821,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":641,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["connector.component",{"_index":465,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":820,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:15",{"_index":823,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:16",{"_index":866,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:18",{"_index":834,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":868,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:20",{"_index":826,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":867,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":865,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":863,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":862,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":860,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":861,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":828,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":873,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":875,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:43",{"_index":870,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:84",{"_index":869,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:91",{"_index":871,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.module",{"_index":564,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":464,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.ts",{"_index":106,"title":{},"body":{"classes/AbstractConnector.html":{},"coverage.html":{}}}],["connector.ts:11",{"_index":126,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:18",{"_index":141,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:25",{"_index":153,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:35",{"_index":139,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:49",{"_index":135,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:55",{"_index":142,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector.ts:8",{"_index":168,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["connector/atft",{"_index":563,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["console.error(err",{"_index":250,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["console.log(\"add",{"_index":406,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["console.log(\"no",{"_index":409,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["console.log(\"onkeypress",{"_index":1303,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log(\"render",{"_index":1276,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log('abstractcamera.constructor",{"_index":72,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["console.log('abstractcamera.ngafterviewinit",{"_index":73,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["console.log('abstractconnector.constructor",{"_index":170,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["console.log('abstractconnector.newobject3dinstance",{"_index":171,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["console.log('abstractlazyobject3d",{"_index":239,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["console.log('abstractlazyobject3d.startloading",{"_index":232,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["console.log('abstractobject3d.ngafterviewinit",{"_index":399,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["console.log('axeshelpercomponent.constructor",{"_index":626,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":627,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":685,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":713,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":714,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('emptycomponent.constructor",{"_index":783,"title":{},"body":{"components/EmptyComponent.html":{}}}],["console.log('emptycomponent.newobject3dinstance",{"_index":784,"title":{},"body":{"components/EmptyComponent.html":{}}}],["console.log('gridhelpercomponent.constructor",{"_index":806,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":807,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":942,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["console.log('objloadercomponent.loadlazyobject",{"_index":922,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["console.log('orbitcontrolscomponent.constructor",{"_index":998,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["console.log('orbitcontrolscomponent.ngafterviewinit",{"_index":1023,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["console.log('perspectivecameracomponent.constructor",{"_index":1053,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1054,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1061,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":1236,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":1239,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log('renderercomponent.startrendering",{"_index":1253,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":1130,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('torusmeshcomponent.constructor",{"_index":1141,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["console.log(camera.camera",{"_index":1278,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["console.log(scene.getobject",{"_index":1277,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["const",{"_index":172,"title":{},"body":{"classes/AbstractConnector.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"components/AxesHelperComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["contentchildren",{"_index":66,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["contentchildren(abstractcamera",{"_index":988,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["contentchildren(abstractobject3d",{"_index":128,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["contentchildren(scenecomponent",{"_index":1208,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["continuously",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1626,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1558,"title":{},"body":{"index.html":{}}}],["control",{"_index":967,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["control.module",{"_index":542,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":472,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":541,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":954,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":643,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["controls.component",{"_index":474,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":956,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":953,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:25",{"_index":989,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:43",{"_index":964,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:45",{"_index":980,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:46",{"_index":982,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:48",{"_index":983,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:50",{"_index":962,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:56",{"_index":985,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:78",{"_index":986,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:84",{"_index":987,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:98",{"_index":984,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["converts",{"_index":741,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["copies",{"_index":1596,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1582,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1571,"title":{},"body":{"license.html":{}}}],["core",{"_index":844,"title":{},"body":{"components/LineConnectorComponent.html":{},"dependencies.html":{}}}],["coverage",{"_index":1407,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":136,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["createcamera",{"_index":19,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createconnectorobject",{"_index":113,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["created",{"_index":1014,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["creates",{"_index":1497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":94,"title":{},"body":{"classes/AbstractCamera.html":{},"components/OrbitControlsComponent.html":{}}}],["css",{"_index":1288,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["current",{"_index":336,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["currently",{"_index":1215,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["cylinder",{"_index":525,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["cylindermeshcomponent",{"_index":516,"title":{"components/CylinderMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":1623,"title":{},"body":{"license.html":{}}}],["dasharray",{"_index":889,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashoffset",{"_index":891,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashratio",{"_index":892,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["data",{"_index":322,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["data.paths",{"_index":1100,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["datacenteractormodule",{"_index":721,"title":{"modules/DataCenterActorModule.html":{}},"body":{"modules/DataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":1584,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1631,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":438,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["default",{"_index":58,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["defaultcolor",{"_index":1490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":664,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["deg2rad",{"_index":737,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":583,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":579,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":745,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":742,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["demo",{"_index":1357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":436,"title":{"dependencies.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":1528,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["depth",{"_index":653,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":654,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthtest",{"_index":857,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["depthwrite",{"_index":259,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["descendants",{"_index":129,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["description",{"_index":294,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":1557,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1525,"title":{},"body":{"index.html":{}}}],["development",{"_index":1356,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["direct",{"_index":1359,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":500,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["directionallightcomponent",{"_index":492,"title":{"components/DirectionalLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":631,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["directives",{"_index":649,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["display",{"_index":1029,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["distance",{"_index":1070,"title":{},"body":{"components/PointLightComponent.html":{}}}],["distribute",{"_index":1592,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":803,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["documentation",{"_index":1408,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1339,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":601,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["done",{"_index":378,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["due",{"_index":841,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["during",{"_index":381,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["dynamic",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1523,"title":{},"body":{"index.html":{}}}],["edges",{"_index":662,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["element",{"_index":630,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["elementref",{"_index":963,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["employing",{"_index":903,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":251,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":637,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["empty.component",{"_index":486,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":480,"title":{"components/EmptyComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":1498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enableraycaster",{"_index":1164,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["enableshadowmap",{"_index":1165,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["end",{"_index":144,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["entire",{"_index":1534,"title":{},"body":{"index.html":{}}}],["error",{"_index":550,"title":{},"body":{"modules/AtftModule.html":{}}}],["error('abstractconnector",{"_index":183,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["error('camera",{"_index":1026,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["especially",{"_index":217,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["euler",{"_index":367,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["event",{"_index":1178,"title":{},"body":{"components/WebGLRendererComponent.html":{},"license.html":{}}}],["event.key",{"_index":1304,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["event.layery",{"_index":1319,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["event.preventdefault",{"_index":1316,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["eventemitter",{"_index":62,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["events",{"_index":970,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["example",{"_index":297,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["examples",{"_index":1522,"title":{},"body":{"index.html":{}}}],["exists",{"_index":242,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["exploration",{"_index":1355,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1509,"title":{},"body":{"index.html":{}}}],["export",{"_index":70,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["exported",{"_index":552,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":441,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["exposition",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1610,"title":{},"body":{"license.html":{}}}],["extends",{"_index":107,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["faces",{"_index":668,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["false",{"_index":60,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["far",{"_index":1033,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["feel",{"_index":1562,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":907,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":920,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["fit",{"_index":1098,"title":{},"body":{"components/SVGLoaderComponent.html":{},"index.html":{}}}],["fit.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":1615,"title":{},"body":{"license.html":{}}}],["fix",{"_index":553,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":1094,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":1502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixing",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":205,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["flex",{"_index":1030,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["fog",{"_index":1105,"title":{},"body":{"components/SceneComponent.html":{}}}],["fogcolor",{"_index":1106,"title":{},"body":{"components/SceneComponent.html":{}}}],["fogfar",{"_index":1107,"title":{},"body":{"components/SceneComponent.html":{}}}],["fognear",{"_index":1108,"title":{},"body":{"components/SceneComponent.html":{}}}],["following",{"_index":1600,"title":{},"body":{"license.html":{}}}],["format",{"_index":1340,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":608,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["found",{"_index":1027,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["fov",{"_index":1034,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["frame",{"_index":526,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["framemeshcomponent",{"_index":517,"title":{"components/FrameMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":1563,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":1246,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["function",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1484,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1599,"title":{},"body":{"license.html":{}}}],["geo",{"_index":179,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["geo.vertices.push(this.source.getobject().position",{"_index":185,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["geo.vertices.push(this.target.getobject().position",{"_index":186,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["geoetry",{"_index":146,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["geometry",{"_index":376,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["getcanvas",{"_index":1223,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getintersected",{"_index":1159,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getintersected(event",{"_index":1186,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getintersects",{"_index":1160,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getintersects(x",{"_index":1188,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getlinegeometry",{"_index":114,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["getmaterial",{"_index":257,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["getmodel",{"_index":334,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["getobject",{"_index":122,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["getrenderpane",{"_index":1212,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["getting",{"_index":1333,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":1384,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":974,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["goals",{"_index":1515,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1578,"title":{},"body":{"license.html":{}}}],["grid",{"_index":487,"title":{},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["gridhelpercomponent",{"_index":481,"title":{"components/GridHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":811,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1101,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["halfx",{"_index":790,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":793,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":1379,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":655,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["heightsegments",{"_index":656,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":295,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":634,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["helper.component",{"_index":485,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":604,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:12",{"_index":613,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:13",{"_index":804,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:19",{"_index":624,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:20",{"_index":805,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":566,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":483,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":565,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helpers",{"_index":1520,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":499,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["hemispherelightcomponent",{"_index":493,"title":{"components/HemisphereLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":1577,"title":{},"body":{"license.html":{}}}],["hides",{"_index":327,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["hightsegments",{"_index":1126,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holder",{"_index":252,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["holders",{"_index":1620,"title":{},"body":{"license.html":{}}}],["horizontally",{"_index":1536,"title":{},"body":{"index.html":{}}}],["host",{"_index":1028,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":1225,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["hostlistener('document:keypress",{"_index":1300,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["hostlistener('window:mousedown",{"_index":1312,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["hostlistener('window:mousemove",{"_index":1306,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["hostlistener('window:resize",{"_index":1282,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["hostlisteners",{"_index":1167,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["html",{"_index":629,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":1251,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":921,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/makimenko/angular",{"_index":1544,"title":{},"body":{"index.html":{}}}],["https://github.com/mrdoob/three.js/pull/10315",{"_index":979,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["https://github.com/spite/three.meshline/issues/51#issuecomment",{"_index":899,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["i.dispatchevent({type",{"_index":1314,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["i.e",{"_index":995,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["i.getobject",{"_index":404,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["i.object",{"_index":1324,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["ideas",{"_index":1566,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":1517,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1216,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"pipes/Deg2RadPipe.html":{},"components/OrbitControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/WebGLRendererComponent.html":{}}}],["implied",{"_index":1611,"title":{},"body":{"license.html":{}}}],["import",{"_index":63,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["imports",{"_index":456,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"index.html":{}}}],["included",{"_index":1605,"title":{},"body":{"license.html":{}}}],["including",{"_index":1586,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1373,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":554,"title":{},"body":{"modules/AtftModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["information",{"_index":1555,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":130,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["init",{"_index":203,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["initial",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["initialized",{"_index":237,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["injectable",{"_index":392,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["input",{"_index":64,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["install",{"_index":1527,"title":{},"body":{"index.html":{}}}],["instance",{"_index":209,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["instead",{"_index":950,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":1352,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":1521,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":751,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["intersects",{"_index":1317,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["intersects.filter((i",{"_index":1323,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["intersects.length",{"_index":1320,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["invalid",{"_index":332,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["isolated",{"_index":1354,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":1511,"title":{},"body":{"index.html":{}}}],["issue",{"_index":977,"title":{},"body":{"components/OrbitControlsComponent.html":{},"changelog.html":{}}}],["issues",{"_index":1492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jetbrains",{"_index":1561,"title":{},"body":{"index.html":{}}}],["join",{"_index":1564,"title":{},"body":{"index.html":{}}}],["js",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1342,"title":{},"body":{"changelog.html":{}}}],["keyboard",{"_index":971,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["keyboardevent",{"_index":1302,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["kind",{"_index":1609,"title":{},"body":{"license.html":{}}}],["knobs",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["known",{"_index":976,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["last",{"_index":947,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["later",{"_index":1056,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":639,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["layer/layer",{"_index":730,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":638,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lazy",{"_index":189,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["lazyobject",{"_index":192,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["leave",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":437,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"overview.html":{}}}],["length",{"_index":661,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["leverage",{"_index":1504,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1624,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1621,"title":{},"body":{"license.html":{}}}],["library",{"_index":1336,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":1569,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":749,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":636,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["light.castshadow",{"_index":765,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":498,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":748,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:13",{"_index":754,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:14",{"_index":755,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":814,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":756,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":752,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light.component.ts:18",{"_index":1071,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.component.ts:19",{"_index":757,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.module",{"_index":568,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":496,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":778,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":769,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":774,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":770,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":772,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":771,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":767,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":1075,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":776,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":1074,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":1076,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":764,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":567,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":1519,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1587,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":842,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["limited",{"_index":1612,"title":{},"body":{"license.html":{}}}],["line",{"_index":137,"title":{},"body":{"classes/AbstractConnector.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["lineconnectorcomponent",{"_index":461,"title":{"components/LineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linematerial",{"_index":853,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["linewidth",{"_index":847,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["linewidth=1",{"_index":840,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["link",{"_index":226,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["listen",{"_index":968,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["listened",{"_index":973,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["listeningcontrolelement",{"_index":959,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["listeningcontrolelement]=mainrenderer.renderpane&gt",{"_index":1221,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["listenmouseevents",{"_index":123,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["listenmouseevents(object",{"_index":161,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["load",{"_index":905,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loaded",{"_index":201,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader",{"_index":296,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader'},{'name",{"_index":642,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["loader.component",{"_index":509,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":902,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:13",{"_index":941,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:15",{"_index":939,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":1089,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:20",{"_index":915,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:21",{"_index":916,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":910,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:27",{"_index":911,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:29",{"_index":913,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":1088,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:33",{"_index":1086,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:35",{"_index":1092,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:37",{"_index":1090,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.module",{"_index":570,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":508,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.ts",{"_index":293,"title":{},"body":{"classes/AbstractModelLoader.html":{},"coverage.html":{}}}],["loader.ts:11",{"_index":300,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["loader.ts:20",{"_index":321,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["loader.ts:30",{"_index":335,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["loader/atft",{"_index":569,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loading",{"_index":221,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loadlazyobject",{"_index":195,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["locally",{"_index":1549,"title":{},"body":{"index.html":{}}}],["loop",{"_index":382,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["lt;three",{"_index":1218,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["mainrenderer&gt",{"_index":1222,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["make",{"_index":923,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["makimenko",{"_index":1391,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["margin",{"_index":1540,"title":{},"body":{"index.html":{}}}],["match",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":102,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":260,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":1453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":261,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor'].some(propname",{"_index":288,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["materialcreator",{"_index":934,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialcreator.preload",{"_index":935,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":1495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":926,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["math.pi",{"_index":710,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["max",{"_index":98,"title":{},"body":{"classes/AbstractCamera.html":{},"miscellaneous/functions.html":{}}}],["maxx",{"_index":1083,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":1084,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["means",{"_index":331,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["meant",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1614,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1590,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":138,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractMesh.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["mesh'},{'name",{"_index":635,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mesh.castshadow",{"_index":282,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["mesh.component",{"_index":524,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":652,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:13",{"_index":1129,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:14",{"_index":708,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":1128,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":707,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":673,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":702,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":706,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":703,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:23",{"_index":671,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":704,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":1137,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":712,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":701,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:29",{"_index":660,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":1066,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:35",{"_index":674,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":1065,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:38",{"_index":1140,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":1067,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:41",{"_index":672,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":665,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":680,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.module",{"_index":572,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":522,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":284,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["mesh/atft",{"_index":571,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":1360,"title":{},"body":{"changelog.html":{}}}],["meshline",{"_index":872,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["meshlineconnectorcomponent",{"_index":462,"title":{"components/MeshLineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meshlinematerial",{"_index":874,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["metadata",{"_index":605,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["method",{"_index":212,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mihail",{"_index":1574,"title":{},"body":{"license.html":{}}}],["miscellaneous",{"_index":1483,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["missing",{"_index":184,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["mit",{"_index":1570,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1556,"title":{},"body":{"index.html":{}}}],["model",{"_index":234,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["model(newmodelurl",{"_index":342,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["modify",{"_index":1589,"title":{},"body":{"license.html":{}}}],["module",{"_index":433,"title":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":435,"title":{"modules.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1554,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":969,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mousedown",{"_index":351,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mouseenter",{"_index":352,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mouseexit",{"_index":353,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mousevector",{"_index":1328,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["move",{"_index":835,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["mtlloader",{"_index":908,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["multiple",{"_index":1232,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["mustrerender",{"_index":77,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{}}}],["name",{"_index":48,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["native",{"_index":966,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["near",{"_index":1035,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["need",{"_index":999,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["new",{"_index":71,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newmodelurl",{"_index":338,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["newobject3dinstance",{"_index":115,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["ng",{"_index":1546,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":21,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["ngmodule",{"_index":451,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{}}}],["ngonchanges",{"_index":22,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["ngonchanges(changes",{"_index":44,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["ngondestroy",{"_index":196,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SVGLoaderComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["nicer",{"_index":924,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["noninfringement",{"_index":1618,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1337,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":548,"title":{},"body":{"modules/AtftModule.html":{},"components/LineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["notice",{"_index":1603,"title":{},"body":{"license.html":{}}}],["notify",{"_index":388,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["now",{"_index":236,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"changelog.html":{}}}],["npm",{"_index":1399,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":1311,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["number",{"_index":52,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":247,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["object",{"_index":111,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["object.addeventlistener('mousedown",{"_index":420,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["object.addeventlistener('mouseenter",{"_index":418,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["object.addeventlistener('mouseexit",{"_index":416,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["object.module",{"_index":540,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":562,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object/atft",{"_index":539,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/scene.component",{"_index":1227,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["object3d",{"_index":202,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["objectloader",{"_index":1524,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":505,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloader",{"_index":914,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["objloadercomponent",{"_index":340,"title":{"components/ObjLoaderComponent.html":{}},"body":{"classes/AbstractModelLoader.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objs",{"_index":1331,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["observable",{"_index":1175,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["obtaining",{"_index":1581,"title":{},"body":{"license.html":{}}}],["official",{"_index":1553,"title":{},"body":{"index.html":{}}}],["old",{"_index":241,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["once",{"_index":1013,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["onchanges",{"_index":10,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"components/OrbitControlsComponent.html":{}}}],["ondestroy",{"_index":191,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["ondocumentmousedown(event",{"_index":1313,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["ondocumentmousemove(event",{"_index":1307,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["one",{"_index":143,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["onkeypress(event",{"_index":1301,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["onresize(event",{"_index":1283,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["opacity",{"_index":858,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["openended",{"_index":695,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["opengl",{"_index":843,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["operation",{"_index":380,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["optimize",{"_index":1243,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["optional",{"_index":49,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1532,"title":{},"body":{"index.html":{}}}],["options",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["orbit",{"_index":473,"title":{},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["orbitcontrols",{"_index":990,"title":{},"body":{"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":470,"title":{"components/OrbitControlsComponent.html":{}},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":370,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["otherwise",{"_index":1628,"title":{},"body":{"license.html":{}}}],["out",{"_index":448,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":67,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/OrbitControlsComponent.html":{}}}],["outputs",{"_index":29,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["overridematerialcolor",{"_index":1085,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":1634,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":211,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["package",{"_index":1463,"title":{"dependencies.html":{}},"body":{}}],["pane",{"_index":997,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["parallel",{"_index":663,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["param",{"_index":744,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":208,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["parentinitialized",{"_index":193,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["particular",{"_index":1616,"title":{},"body":{"license.html":{}}}],["patch",{"_index":1371,"title":{},"body":{"changelog.html":{}}}],["paths",{"_index":1099,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["performance",{"_index":1244,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["permission",{"_index":1576,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1597,"title":{},"body":{"license.html":{}}}],["person",{"_index":1580,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1598,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":454,"title":{},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["perspectivecameracomponent",{"_index":445,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pick",{"_index":1002,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["pipe",{"_index":734,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":1248,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["pipe.module",{"_index":545,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":582,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":544,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":735,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":743,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixels",{"_index":1291,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["plane",{"_index":527,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":518,"title":{"components/PlaneMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platforms",{"_index":846,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["point",{"_index":497,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["pointlightcomponent",{"_index":494,"title":{"components/PointLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":1607,"title":{},"body":{"license.html":{}}}],["positions",{"_index":152,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["positionx",{"_index":25,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positiony",{"_index":26,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz",{"_index":27,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz'].some(propname",{"_index":78,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["previous",{"_index":328,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["private",{"_index":110,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["profile",{"_index":845,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["project",{"_index":1338,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects/.../applied",{"_index":1485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../calculate",{"_index":1486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":1487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":1488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":726,"title":{},"body":{"modules/DataCenterActorModule.html":{},"coverage.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":536,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/abstract",{"_index":6,"title":{},"body":{"classes/AbstractCamera.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":449,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1031,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":471,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":952,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/abstract",{"_index":188,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractObject3D.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":561,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/abstract",{"_index":105,"title":{},"body":{"classes/AbstractConnector.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":463,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":819,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/mesh",{"_index":852,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":482,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":603,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":780,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:10",{"_index":781,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:17",{"_index":782,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":802,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":495,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":747,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":810,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":1069,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/abstract",{"_index":292,"title":{},"body":{"classes/AbstractModelLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":507,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":901,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":938,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":1081,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/abstract",{"_index":254,"title":{},"body":{"classes/AbstractMesh.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":521,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":651,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":694,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":785,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":1064,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":1125,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":1133,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":1103,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:13",{"_index":1109,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":1110,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":1112,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:16",{"_index":1115,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:17",{"_index":1113,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:19",{"_index":1116,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":597,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":581,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":736,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":740,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1077,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1080,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":589,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/webgl",{"_index":1146,"title":{},"body":{"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":1449,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":1454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":1457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":1459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":222,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["promise((resolve",{"_index":927,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["properties",{"_index":12,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["property",{"_index":326,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SVGLoaderComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["propname",{"_index":79,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{}}}],["props",{"_index":766,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{}}}],["protected",{"_index":15,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["provide",{"_index":606,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["provided",{"_index":1510,"title":{},"body":{"index.html":{},"license.html":{}}}],["providers",{"_index":440,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["public",{"_index":20,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["publish",{"_index":1591,"title":{},"body":{"license.html":{}}}],["published",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":1567,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1617,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":65,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["queue",{"_index":1235,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["rad2deg",{"_index":1078,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":584,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":580,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":696,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":369,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radius",{"_index":1127,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":697,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":698,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["raycaster",{"_index":1154,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["readonly",{"_index":1153,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["reasons",{"_index":1369,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":262,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["recreate",{"_index":1016,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["rectangular",{"_index":667,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["reference",{"_index":200,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["regardless",{"_index":849,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["reject",{"_index":928,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["releases",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":240,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["removechild",{"_index":124,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["removechild(object",{"_index":166,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["removed",{"_index":333,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["render",{"_index":30,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["rendered",{"_index":1214,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer",{"_index":648,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["renderer.component",{"_index":592,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.component.html",{"_index":1150,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.scss",{"_index":1148,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts",{"_index":1147,"title":{},"body":{"components/WebGLRendererComponent.html":{},"coverage.html":{}}}],["renderer.component.ts:100",{"_index":1193,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:114",{"_index":1185,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:123",{"_index":1184,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:130",{"_index":1195,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:141",{"_index":1197,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:153",{"_index":1192,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:159",{"_index":1182,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:16",{"_index":1207,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:17",{"_index":1211,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:174",{"_index":1180,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:18",{"_index":1203,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:181",{"_index":1187,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:19",{"_index":1205,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:199",{"_index":1189,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:20",{"_index":1210,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:23",{"_index":1201,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:25",{"_index":1209,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:26",{"_index":1198,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:29",{"_index":1176,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:32",{"_index":1174,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:35",{"_index":1173,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:42",{"_index":1191,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:71",{"_index":1213,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:75",{"_index":1224,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.component.ts:79",{"_index":1196,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderer.module",{"_index":547,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":590,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer/atft",{"_index":546,"title":{},"body":{"modules/AtftModule.html":{}}}],["rendering",{"_index":390,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["renderpane",{"_index":1171,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["renderqueue",{"_index":1166,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["repo",{"_index":1516,"title":{},"body":{"index.html":{}}}],["requestanimationframe(this.animate",{"_index":896,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["requests",{"_index":1568,"title":{},"body":{"index.html":{}}}],["required",{"_index":391,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["res",{"_index":1322,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["res.object",{"_index":1325,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["reset",{"_index":447,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"overview.html":{}}}],["resettling",{"_index":1290,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["resize",{"_index":1161,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["resize(size",{"_index":1194,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["resizing",{"_index":1286,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["resolve",{"_index":937,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resolve(model",{"_index":930,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["restrict",{"_index":994,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["restriction",{"_index":1585,"title":{},"body":{"license.html":{}}}],["result",{"_index":101,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":103,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":175,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1588,"title":{},"body":{"license.html":{}}}],["rotatespeed",{"_index":960,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["rotatespeed]=1",{"_index":1219,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["rotatex",{"_index":345,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["rotatey",{"_index":346,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["rotatez",{"_index":347,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["rotatez'].some(propname",{"_index":395,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["rotation",{"_index":366,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["run",{"_index":1547,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1228,"title":{},"body":{"components/WebGLRendererComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1230,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["safely",{"_index":215,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["same",{"_index":1367,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1529,"title":{},"body":{"index.html":{}}}],["scaletofit",{"_index":1096,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":1503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scene",{"_index":246,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["scene'},{'name",{"_index":645,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["scene.background",{"_index":1118,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":575,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scene.fog",{"_index":1121,"title":{},"body":{"components/SceneComponent.html":{}}}],["scenecomponent",{"_index":559,"title":{"components/SceneComponent.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenecomponents",{"_index":1155,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["scenes",{"_index":1233,"title":{},"body":{"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["screen",{"_index":1535,"title":{},"body":{"index.html":{}}}],["see",{"_index":339,"title":{},"body":{"classes/AbstractModelLoader.html":{},"changelog.html":{},"index.html":{}}}],["seems",{"_index":945,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":666,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["select",{"_index":1321,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["selectedobject",{"_index":1156,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["selector",{"_index":609,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["sell",{"_index":1595,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1344,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["separating",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":647,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["server/server",{"_index":732,"title":{},"body":{"modules/DataCenterActorModule.html":{}}}],["serveractorcomponent",{"_index":646,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":341,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/LineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["setmodel(newmodelurl",{"_index":337,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["settings",{"_index":325,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["setuporbitcontrols",{"_index":958,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["shadow",{"_index":1358,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1604,"title":{},"body":{"license.html":{}}}],["shape",{"_index":796,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto",{"_index":799,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":800,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":798,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["side",{"_index":885,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["sides",{"_index":670,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["signal",{"_index":206,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["similarly",{"_index":92,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["simple",{"_index":1507,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":45,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["single",{"_index":1285,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["size",{"_index":612,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["size.ts",{"_index":1455,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":786,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":787,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skip",{"_index":1245,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["skycolor",{"_index":812,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["software",{"_index":95,"title":{},"body":{"classes/AbstractCamera.html":{},"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"modules/DataCenterActorModule.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["source/target",{"_index":151,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["sphere",{"_index":528,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["spheremeshcomponent",{"_index":519,"title":{"components/SphereMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.app.component.html",{"_index":1531,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":1541,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":1552,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":1538,"title":{},"body":{"index.html":{}}}],["started",{"_index":1334,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["startloading",{"_index":197,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["startrendering",{"_index":1162,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["statements",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1200,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["still",{"_index":972,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["stories",{"_index":1551,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":1508,"title":{},"body":{"index.html":{}}}],["storybook.js",{"_index":1353,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook/addon",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["strange",{"_index":1284,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["string",{"_index":272,"title":{},"body":{"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":951,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["styleurls",{"_index":955,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["subject",{"_index":1202,"title":{},"body":{"components/WebGLRendererComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1593,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1565,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":1249,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["substantial",{"_index":1606,"title":{},"body":{"license.html":{}}}],["successful",{"_index":330,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["super",{"_index":169,"title":{},"body":{"classes/AbstractConnector.html":{},"components/AxesHelperComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/TorusMeshComponent.html":{}}}],["super.addchild(obj",{"_index":248,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["super.afterinit",{"_index":229,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["super.ngonchanges(changes",{"_index":286,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["super.removechild(this.lazyobject",{"_index":244,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["super.startloading",{"_index":344,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["support",{"_index":1632,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1560,"title":{},"body":{"index.html":{}}}],["svg",{"_index":510,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":1091,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["svgloadercomponent",{"_index":506,"title":{"components/SVGLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["switch",{"_index":1361,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":36,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["table",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1376,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["takeuntil",{"_index":1229,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["target",{"_index":125,"title":{},"body":{"classes/AbstractConnector.html":{},"components/DirectionalLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["template",{"_index":611,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1149,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["test",{"_index":1526,"title":{},"body":{"index.html":{}}}],["text",{"_index":599,"title":{},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["text.module",{"_index":574,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":598,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":573,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["textmeshcomponent",{"_index":596,"title":{},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":949,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["texturepath",{"_index":909,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":946,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":699,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":700,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":788,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._model",{"_index":343,"title":{},"body":{"classes/AbstractModelLoader.html":{}}}],["this.addchild(i.getobject",{"_index":408,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.afterinit",{"_index":415,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.animate",{"_index":894,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animate.bind(this",{"_index":895,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animated",{"_index":880,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationincrement",{"_index":898,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.applymaterial",{"_index":289,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["this.applyposition",{"_index":76,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.applyrotation",{"_index":396,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.applyshadowprops(mesh",{"_index":693,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.applytranslation",{"_index":398,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.applyzaxisup",{"_index":75,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.calculateaspectratio",{"_index":1297,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.camera",{"_index":82,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.aspect",{"_index":1062,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.position.set",{"_index":83,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.camera.up.set(0",{"_index":99,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1063,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.cameracomponents",{"_index":1271,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.cameracomponents.first",{"_index":1275,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.cameracomponents.foreach(camera",{"_index":1298,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.cameracomponents.length",{"_index":1272,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvas",{"_index":1255,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvas.clientheight",{"_index":1259,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvas.clientwidth",{"_index":1281,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvas.style.height",{"_index":1295,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvas.style.width",{"_index":1294,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvasref",{"_index":1250,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":1252,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.castshadow",{"_index":283,"title":{},"body":{"classes/AbstractMesh.html":{},"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.childcameras",{"_index":1024,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.childcameras.first",{"_index":1025,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1019,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.childnodes",{"_index":401,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.childnodes.filter(i",{"_index":403,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.childnodes.length",{"_index":402,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.constructor.name",{"_index":407,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.controls",{"_index":1005,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1022,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.controls.dispose",{"_index":1017,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1007,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1010,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.createcamera",{"_index":74,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.createconnectorobject",{"_index":173,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.depth",{"_index":688,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":691,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthtest",{"_index":884,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.depthwrite",{"_index":281,"title":{},"body":{"classes/AbstractMesh.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.distance",{"_index":1073,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":809,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.enableraycaster",{"_index":1315,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.enableshadowmap",{"_index":1261,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.far",{"_index":1060,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.fog",{"_index":1120,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fogfar",{"_index":1124,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fognear",{"_index":1123,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fov",{"_index":1058,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.geometry",{"_index":836,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.geometry.verticesneedupdate",{"_index":851,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getintersected(event",{"_index":1308,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.getintersects(event.layerx",{"_index":1318,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.getlinegeometry",{"_index":837,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.getmaterial",{"_index":291,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.getobject",{"_index":287,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["this.getobject().material",{"_index":290,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["this.height",{"_index":687,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.heightsegments",{"_index":690,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.hightsegments",{"_index":1132,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.intensity",{"_index":763,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.lazyobject",{"_index":243,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["this.line",{"_index":877,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.line.setgeometry(this.geometry",{"_index":878,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial",{"_index":879,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial.uniforms.dashoffset.value",{"_index":897,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linewidth",{"_index":883,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.listeningcontrolelement",{"_index":1020,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1021,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.listenmouseevents(this.object",{"_index":414,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.loader.load(this.model",{"_index":929,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":936,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.loadlazyobject().then(obj",{"_index":238,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["this.material",{"_index":280,"title":{},"body":{"classes/AbstractMesh.html":{},"components/ObjLoaderComponent.html":{}}}],["this.mousedown.emit",{"_index":421,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.mouseenter.emit",{"_index":419,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.mouseexit.emit",{"_index":417,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.mtlloader.load(this.material",{"_index":933,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.settexturepath(this.texturepath",{"_index":932,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.near",{"_index":1059,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.newobject3dinstance",{"_index":400,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.object",{"_index":394,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.object.add(object",{"_index":431,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.object.position.set",{"_index":427,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.object.remove(object",{"_index":432,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.object.rotation.set",{"_index":422,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.ondestroy.next",{"_index":1305,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.opacity",{"_index":882,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.openended",{"_index":718,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.parentinitialized",{"_index":230,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["this.positionx",{"_index":84,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.positiony",{"_index":86,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.positionz",{"_index":87,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.radialsegments",{"_index":717,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":1142,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":716,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.raycaster",{"_index":1267,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.raycaster.intersectobject(scenecomponent.getobject",{"_index":1332,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1330,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.receiveshadow",{"_index":285,"title":{},"body":{"classes/AbstractMesh.html":{}}}],["this.render",{"_index":1237,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.render.bind(this",{"_index":1238,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.render.emit",{"_index":81,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.renderer",{"_index":1254,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.autoclear",{"_index":1266,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.render(scenecomponent.getobject",{"_index":1279,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.setclearcolor(0xffffff",{"_index":1265,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.setpixelratio(devicepixelratio",{"_index":1257,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.setsize(this.canvas.clientwidth",{"_index":1258,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.setsize(width",{"_index":1296,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.shadowmap.autoupdate",{"_index":1262,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.shadowmap.enabled",{"_index":1260,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderer.shadowmap.type",{"_index":1263,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.renderqueue",{"_index":1242,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.resize('100",{"_index":1293,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.resize('100px",{"_index":1292,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.rotatespeed",{"_index":1008,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.rotatex",{"_index":423,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.rotatey",{"_index":424,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.rotatez",{"_index":425,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.scenecomponents",{"_index":1269,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.scenecomponents.first",{"_index":1273,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.scenecomponents.length",{"_index":1270,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.selectedobject",{"_index":1309,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.selectedobject.dispatchevent({type",{"_index":1310,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.setuporbitcontrols",{"_index":1018,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["this.sizex",{"_index":791,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":794,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.source",{"_index":180,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.source.render.subscribe(item",{"_index":176,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.startloading",{"_index":231,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["this.startrendering",{"_index":1241,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.target",{"_index":181,"title":{},"body":{"classes/AbstractConnector.html":{},"components/DirectionalLightComponent.html":{}}}],["this.target.render.subscribe(item",{"_index":178,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.texturepath",{"_index":931,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.thetalength",{"_index":720,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":719,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":795,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.translatex",{"_index":428,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.translatey",{"_index":429,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.translatez",{"_index":430,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.transparent",{"_index":881,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.tube",{"_index":1143,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":1144,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.updatechildcamerasaspectratio",{"_index":1268,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.updatelinegeometry",{"_index":177,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.viewchilds",{"_index":411,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.viewchilds.filter(i",{"_index":413,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.viewchilds.length",{"_index":412,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["this.viewinitialized",{"_index":1240,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["this.watchobjects",{"_index":174,"title":{},"body":{"classes/AbstractConnector.html":{}}}],["this.widthsegments",{"_index":689,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["this.zaxisup",{"_index":88,"title":{},"body":{"classes/AbstractCamera.html":{}}}],["this.zoomspeed",{"_index":1011,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["three",{"_index":69,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.axeshelper",{"_index":625,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":628,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxgeometry(this.width",{"_index":686,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":1119,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":715,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":761,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.doubleside",{"_index":886,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.fog(appliedcolor(this.fogcolor",{"_index":1122,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.geometry",{"_index":140,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["three.gridhelper(this.size",{"_index":808,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":1102,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":815,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.js",{"_index":978,"title":{},"body":{"components/OrbitControlsComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.line",{"_index":827,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.line(this.geometry",{"_index":850,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial",{"_index":838,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.material",{"_index":268,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":265,"title":{},"body":{"classes/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":692,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(this.line.geometry",{"_index":893,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.meshline",{"_index":876,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.normalblending",{"_index":888,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.object3d",{"_index":155,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["three.objectloader",{"_index":940,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":904,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":1264,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["three.perspectivecamera",{"_index":1057,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":1068,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":1072,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1204,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["three.scene",{"_index":1117,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.shape",{"_index":797,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":801,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":1131,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":1145,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector3",{"_index":1501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(x",{"_index":1329,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["three.webglrenderer",{"_index":1206,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":991,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":919,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":918,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/svgloader",{"_index":1093,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["threejs.git",{"_index":1545,"title":{},"body":{"index.html":{}}}],["throw",{"_index":182,"title":{},"body":{"classes/AbstractConnector.html":{},"components/OrbitControlsComponent.html":{}}}],["thus",{"_index":1015,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["time",{"_index":379,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["todo",{"_index":149,"title":{},"body":{"classes/AbstractConnector.html":{},"components/DirectionalLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PointLightComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["tort",{"_index":1627,"title":{},"body":{"license.html":{}}}],["torus",{"_index":529,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["torusmeshcomponent",{"_index":520,"title":{"components/TorusMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transform",{"_index":738,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":739,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1079,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":375,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["translatex",{"_index":348,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["translatey",{"_index":349,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["translatez",{"_index":350,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["translatez'].some(propname",{"_index":397,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["transparent",{"_index":859,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["tree",{"_index":602,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["trigger",{"_index":233,"title":{},"body":{"classes/AbstractLazyObject3D.html":{}}}],["true",{"_index":80,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractObject3D.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["tube",{"_index":1135,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":1136,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typically",{"_index":377,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["undefined",{"_index":198,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"modules/AtftModule.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SVGLoaderComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["undefined).foreach(i",{"_index":405,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["underlying",{"_index":1217,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["unexpected",{"_index":551,"title":{},"body":{"modules/AtftModule.html":{},"components/WebGLRendererComponent.html":{}}}],["unless",{"_index":214,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["unreleased",{"_index":1346,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":91,"title":{},"body":{"classes/AbstractCamera.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["update",{"_index":1000,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["updateaspectratio",{"_index":23,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":51,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatechildcamerasaspectratio",{"_index":1163,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["updated",{"_index":147,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updatelinegeometry",{"_index":116,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["upon",{"_index":329,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["uri",{"_index":324,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["usage",{"_index":1518,"title":{},"body":{"index.html":{}}}],["use",{"_index":1530,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":993,"title":{},"body":{"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":607,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["using",{"_index":1506,"title":{},"body":{"index.html":{}}}],["usually",{"_index":323,"title":{},"body":{"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["util",{"_index":278,"title":{},"body":{"classes/AbstractMesh.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["util/applied",{"_index":759,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":1095,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["util/scale",{"_index":1097,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["v0.0.3",{"_index":1377,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":59,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"modules/AtftModule.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"miscellaneous/functions.html":{}}}],["values",{"_index":1003,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["var",{"_index":632,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["version",{"_index":1372,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":1345,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":1382,"title":{},"body":{"changelog.html":{}}}],["vertically",{"_index":1537,"title":{},"body":{"index.html":{}}}],["via",{"_index":1234,"title":{},"body":{"components/WebGLRendererComponent.html":{},"index.html":{}}}],["viewchild",{"_index":1226,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["viewchild('canvas",{"_index":1199,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["viewchildren",{"_index":393,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["viewchildren(abstractobject3d",{"_index":133,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["viewchilds",{"_index":112,"title":{},"body":{"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["viewinitialized",{"_index":1157,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractConnector.html":{},"classes/AbstractLazyObject3D.html":{},"classes/AbstractMesh.html":{},"classes/AbstractModelLoader.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["want",{"_index":1533,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1613,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1608,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1548,"title":{},"body":{"index.html":{}}}],["watchobjects",{"_index":117,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["wavefront",{"_index":906,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":1514,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":591,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["webglrenderercomponent",{"_index":588,"title":{"components/WebGLRendererComponent.html":{}},"body":{"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{},"coverage.html":{},"overview.html":{}}}],["well",{"_index":148,"title":{},"body":{"classes/AbstractConnector.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["whether",{"_index":207,"title":{},"body":{"classes/AbstractLazyObject3D.html":{},"classes/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"license.html":{}}}],["whose",{"_index":965,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["width",{"_index":657,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["widthsegments",{"_index":658,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["window",{"_index":975,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["window.innerheight",{"_index":1327,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window.innerwidth",{"_index":1326,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:mousedown",{"_index":1168,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:mousedown(event",{"_index":1179,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:mousemove",{"_index":1169,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:mousemove(event",{"_index":1181,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:resize",{"_index":1170,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["window:resize(event",{"_index":1183,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["without",{"_index":925,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["workaround",{"_index":1289,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}],["write",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":371,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["xyz",{"_index":426,"title":{},"body":{"classes/AbstractObject3D.html":{}}}],["y",{"_index":372,"title":{},"body":{"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WebGLRendererComponent.html":{}}}],["yanked",{"_index":1370,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":1493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":89,"title":{},"body":{"classes/AbstractCamera.html":{},"classes/AbstractObject3D.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["zaxisup",{"_index":28,"title":{},"body":{"classes/AbstractCamera.html":{},"components/PerspectiveCameraComponent.html":{}}}],["zone.js",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":446,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftTextModule.html":{},"modules/DataCenterActorModule.html":{},"components/OrbitControlsComponent.html":{},"components/WebGLRendererComponent.html":{},"overview.html":{}}}],["zoomspeed",{"_index":961,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["zoomspeed]=1.2",{"_index":1220,"title":{},"body":{"components/WebGLRendererComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCamera.html":{"url":"classes/AbstractCamera.html","title":"class - AbstractCamera","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCamera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/camera/abstract-camera.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createCamera\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyZAxisUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyZAxisUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:12\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Input, QueryList, ContentChildren, OnChanges, SimpleChanges, Output, EventEmitter} from '@angular/core';\nimport * as THREE from 'three';\n\nexport abstract class AbstractCamera implements AfterViewInit, OnChanges {\n\n  camera: T;\n\n  @Input() positionX: number;\n  @Input() positionY: number;\n  @Input() positionZ: number;\n\n  @Input() zAxisUp = false;\n\n  @Output() render = new EventEmitter();\n\n  constructor() {\n    // console.log('AbstractCamera.constructor');\n  }\n\n  public ngAfterViewInit(): void {\n    // console.log('AbstractCamera.ngAfterViewInit');\n    this.createCamera();\n\n    this.applyZAxisUp();\n    this.applyPosition();\n  }\n\n  protected abstract createCamera(): void;\n\n  public abstract updateAspectRatio(aspect: number);\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let mustRerender = false;\n\n    if (['positionX', 'positionY', 'positionZ'].some(propName => propName in changes)) {\n      this.applyPosition();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.render.emit();\n    }\n\n  }\n\n  protected applyPosition() {\n    if (this.camera) {\n      this.camera.position.set(\n        this.positionX || 0,\n        this.positionY || 0,\n        this.positionZ || 0,\n      );\n    }\n  }\n\n  protected applyZAxisUp() {\n    if (this.camera && this.zAxisUp) {\n      // Z axis up (similarly to 3D Creation Software: Blender, 3DS Max)\n      this.camera.up.set(0, 0, 1);\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractConnector.html":{"url":"classes/AbstractConnector.html","title":"class - AbstractConnector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractConnector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/abstract-connector.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractObject3D\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createConnectorObject\n                            \n                            \n                                    Protected\n                                getLineGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                source\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:49\n                \n            \n\n\n            \n                \n                    Create line mesh\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Geometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:55\n                \n            \n\n\n            \n                \n                    If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            watchObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchObjects()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\nexport abstract class AbstractConnector extends AbstractObject3D {\n\n  @Input()\n  source: AbstractObject3D;\n\n  @Input()\n  target: AbstractObject3D;\n\n  constructor() {\n    super();\n    // console.log('AbstractConnector.constructor');\n  }\n\n  protected newObject3DInstance(): T {\n    // console.log('AbstractConnector.newObject3DInstance');\n    const mesh = this.createConnectorObject();\n    this.watchObjects();\n    return mesh;\n  }\n\n  private watchObjects() {\n    this.source.render.subscribe(item => {\n      this.updateLineGeometry();\n    });\n\n    this.target.render.subscribe(item => {\n      this.updateLineGeometry();\n    });\n  }\n\n  protected getLineGeometry(): THREE.Geometry {\n    const geo = new THREE.Geometry();\n    if (!this.source || !this.target) {\n      throw new Error('AbstractConnector: source or target inputs are missing!');\n    }\n    geo.vertices.push(this.source.getObject().position);\n    geo.vertices.push(this.target.getObject().position);\n    return geo;\n  }\n\n\n  /**\n   * Create line mesh\n   */\n  abstract createConnectorObject(): T;\n\n  /**\n   * If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n   * // TODO: Calculate only when source/target positions were changed\n   */\n  abstract updateLineGeometry(): void;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractLazyObject3D.html":{"url":"classes/AbstractLazyObject3D.html","title":"class - AbstractLazyObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractLazyObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            lazyObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:22\n                            \n                        \n\n                \n                    \n                        This is reference to lazy loaded Object3D (async after init)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parentInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:17\n                            \n                        \n\n                \n                    \n                        Flag to signal whether the parent class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:28\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {OnDestroy} from '@angular/core';\n\nimport {AbstractObject3D} from './abstract-object-3d';\n\nimport * as THREE from 'three';\n\nexport abstract class AbstractLazyObject3D extends AbstractObject3D implements OnDestroy {\n\n  /**\n   * Flag to signal whether the parent class instance AbstractObject3D called the\n   * overwritten method {@link AbstractModelLoader#afterInit} yet.\n   *\n   * Unless that method was called, no methods and properties of {@link AbstractObject3D}\n   * may be safely accessed, especially {@link AbstractObject3D#addChild} and\n   * {@link AbstractObject3D.renderer}.\n   */\n  private parentInitialized = false;\n\n  /**\n   * This is reference to lazy loaded Object3D (async after init)\n   */\n  protected lazyObject: THREE.Object3D | undefined;\n\n  /**\n   * Abstract method for lazy loading\n   *\n   */\n  protected abstract async loadLazyObject(): Promise;\n\n  protected afterInit() {\n    super.afterInit();\n    this.parentInitialized = true;\n    this.startLoading();\n  }\n\n  protected startLoading() {\n    // console.log('AbstractLazyObject3D.startLoading');\n    // Trigger model acquisition now that the parent has been initialized.\n    this.loadLazyObject().then(obj => {\n      // console.log('AbstractLazyObject3D loaded');\n      // remove old if exists\n      if (this.lazyObject) {\n        super.removeChild(this.lazyObject);\n      }\n\n      // add lazy object to scene\n      this.lazyObject = obj;\n      super.addChild(obj);\n\n      this.render.emit();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.lazyObject) {\n      super.removeChild(this.lazyObject);\n    }\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    // Just empty object (holder of lazy object)\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractMesh.html":{"url":"classes/AbstractMesh.html","title":"class - AbstractMesh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedMaterial} from '../../util';\n\nexport abstract class AbstractMesh extends AbstractObject3D implements OnChanges {\n\n  @Input()\n  material: string;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected applyShadowProps(mesh: THREE.Mesh) {\n    mesh.castShadow = this.castShadow;\n    mesh.receiveShadow = this.receiveShadow;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.getObject()) {\n      return;\n    }\n\n    let mustRerender = false;\n    if (['material', 'materialColor'].some(propName => propName in changes)) {\n      this.applyMaterial();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.render.emit();\n    }\n  }\n\n  public applyMaterial() {\n    this.getObject().material = this.getMaterial();\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractModelLoader.html":{"url":"classes/AbstractModelLoader.html","title":"class - AbstractModelLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractModelLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/abstract-model-loader.ts\n        \n\n            \n                Description\n            \n            \n                Helper parent class for model loader.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractLazyObject3D\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            lazyObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:22\n\n                            \n                        \n\n                \n                    \n                        This is reference to lazy loaded Object3D (async after init)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parentInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:17\n\n                            \n                        \n\n                \n                    \n                        Flag to signal whether the parent class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:28\n\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:20\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:30\n                                \n                            \n                    \n                        \n                                The current model data source (usually a URI).\n\n\n                        \n                    \n\n                \n                    \n                        setmodel(newModelUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:20\n                                \n                            \n                    \n                        \n                                The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newModelUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Input} from '@angular/core';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\n\n/**\n * Helper parent class for model loader.\n *\n * @see ObjLoaderComponent\n */\nexport abstract class AbstractModelLoader extends AbstractLazyObject3D {\n\n  private _model: string;\n\n  /**\n   * The model data source (usually a URI).\n   * Settings this property only hides the previous model upon successful\n   * loading of the new one. This especially means that if the new data source\n   * is invalid, the old model will *not* be removed from the scene.\n   */\n  @Input()\n  public set model(newModelUrl: string) {\n    if (this._model !== newModelUrl) {\n      this._model = newModelUrl;\n      super.startLoading();\n    }\n  }\n\n  /**\n   * The current model data source (usually a URI).\n   */\n  public get model() {\n    return this._model;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractObject3D.html":{"url":"classes/AbstractObject3D.html","title":"class - AbstractObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-object-3d.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:23\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:30\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:32\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:37\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ContentChildren,\n  EventEmitter, Injectable,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport * as THREE from 'three';\n\nexport abstract class AbstractObject3D implements AfterViewInit, OnChanges {\n\n  @ContentChildren(AbstractObject3D, {descendants: false}) childNodes: QueryList>;\n\n  @ViewChildren(AbstractObject3D) viewChilds: QueryList>;\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateX: number;\n  @Input() rotateY: number;\n  @Input() rotateZ: number;\n\n  /**\n   * Translate the geometry. This is typically done as a one time operation, and not during a loop.\n   */\n  @Input() translateX: number;\n  @Input() translateY: number;\n  @Input() translateZ: number;\n\n  /**\n   * Notify parent component, that scene rendering is required\n   */\n  @Output() render = new EventEmitter();\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() mouseDown = new EventEmitter();\n\n  private object: T;\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.object) {\n      return;\n    }\n\n    let mustRerender = false;\n\n    if (['rotateX', 'rotateY', 'rotateZ'].some(propName => propName in changes)) {\n      this.applyRotation();\n      mustRerender = true;\n    }\n    if (['translateX', 'translateY', 'translateZ'].some(propName => propName in changes)) {\n      this.applyTranslation();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.render.emit();\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    // console.log('AbstractObject3D.ngAfterViewInit');\n    this.object = this.newObject3DInstance();\n\n    this.applyTranslation();\n    this.applyRotation();\n\n    if (this.childNodes !== undefined && this.childNodes.length > 1) {\n      this.childNodes.filter(i => i !== this && i.getObject() !== undefined).forEach(i => {\n        // console.log(\"Add childNodes for \", this.constructor.name, i);\n        this.addChild(i.getObject());\n      });\n    } else {\n      // console.log(\"No child Object3D for: \" + this.constructor.name);\n    }\n\n    if (this.viewChilds !== undefined && this.viewChilds.length > 0) {\n      this.viewChilds.filter(i => i !== this && i.getObject() !== undefined).forEach(i => {\n        // console.log(\"Add viewChilds for \", this.constructor.name, i);\n        this.addChild(i.getObject());\n      });\n    } else {\n      // console.log(\"No child Object3D for: \" + this.constructor.name);\n    }\n\n    this.listenMouseEvents(this.object);\n    this.afterInit();\n  }\n\n  protected listenMouseEvents(object: THREE.Object3D) {\n    object.addEventListener('mouseExit', () => {\n      this.mouseExit.emit();\n    });\n\n    object.addEventListener('mouseEnter', () => {\n      this.mouseEnter.emit();\n    });\n\n    object.addEventListener('mouseDown', () => {\n      this.mouseDown.emit();\n    });\n  }\n\n  private applyRotation(): void {\n    this.object.rotation.set(\n      this.rotateX || 0,\n      this.rotateY || 0,\n      this.rotateZ || 0,\n      'XYZ'\n    );\n  }\n\n  private applyTranslation(): void {\n    this.object.position.set(\n      this.translateX || 0,\n      this.translateY || 0,\n      this.translateZ || 0\n    );\n  }\n\n  protected addChild(object: THREE.Object3D): void {\n    this.object.add(object);\n  }\n\n  protected removeChild(object: THREE.Object3D): void {\n    this.object.remove(object);\n  }\n\n  public getObject(): T {\n    return this.object;\n  }\n\n  protected afterInit() {\n  }\n\n  protected abstract newObject3DInstance(): T;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\n\n\n@NgModule({\n  declarations: [\n    PerspectiveCameraComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PerspectiveCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MeshLineConnectorComponent} from './mesh-line-connector.component';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRendererModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRendererModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule\n  ]\n})\nexport class AtftModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nSceneComponent\n\nSceneComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent\n  ],\n  exports: [\n    SceneComponent,\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\n\nWebGLRendererComponent\n\nWebGLRendererComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nWebGLRendererComponent->AtftRendererModule\n\n\n\n\n\nWebGLRendererComponent \n\nWebGLRendererComponent \n\nWebGLRendererComponent  -->\n\nAtftRendererModule->WebGLRendererComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WebGLRendererComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WebGLRendererComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {WebGLRendererComponent} from './webgl-renderer.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    WebGLRendererComponent\n  ],\n  exports: [\n    WebGLRendererComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => AxesHelperComponent) }\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => AxesHelperComponent) }],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n\n  constructor() {\n    super();\n    // console.log('AxesHelperComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => BoxMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:29\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:47\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:23\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:41\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:17\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:35\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => BoxMeshComponent)}],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => CylinderMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => CylinderMeshComponent)}],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor() {\n    super();\n    // console.log('CylinderMeshComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataCenterActorModule.html":{"url":"modules/DataCenterActorModule.html","title":"module - DataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    DataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataCenterActorModule\n\n\n\ncluster_DataCenterActorModule_declarations\n\n\n\ncluster_DataCenterActorModule_imports\n\n\n\ncluster_DataCenterActorModule_exports\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\n\n\nDataCenterActorModule\n\nDataCenterActorModule\n\nDataCenterActorModule -->\n\nLayerActorComponent->DataCenterActorModule\n\n\n\n\n\nServerActorComponent\n\nServerActorComponent\n\nDataCenterActorModule -->\n\nServerActorComponent->DataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerActorComponent \n\nServerActorComponent \n\nServerActorComponent  -->\n\nDataCenterActorModule->ServerActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nDataCenterActorModule -->\n\nAtftModule->DataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {ServerActorComponent} from './server/server-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerActorComponent\n  ]\n})\nexport class DataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => DirectionalLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util/applied-color';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => DirectionalLightComponent)}],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => EmptyComponent) }\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => EmptyComponent) }],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D {\n\n  constructor() {\n    super();\n    // console.log('EmptyComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    // console.log('EmptyComponent.newObject3DInstance');\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => FrameMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => FrameMeshComponent)}],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => GridHelperComponent) }\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => GridHelperComponent) }],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor() {\n    super();\n    // console.log('GridHelperComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => HemisphereLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util/applied-color';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => HemisphereLightComponent) }],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => LineConnectorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                            \n                                    Abstract\n                                createConnectorObject\n                            \n                            \n                                    Protected\n                                getLineGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                materialColor\n                            \n                            \n                                source\n                            \n                            \n                                target\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:49\n\n                \n            \n\n\n            \n                \n                    Create line mesh\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineGeometry()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Geometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLineGeometry()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:55\n\n                \n            \n\n\n            \n                \n                    If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            watchObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchObjects()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Geometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => LineConnectorComponent)}],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  // TODO: move to abstract?\n  private geometry: THREE.Geometry;\n\n  public createConnectorObject(): THREE.Line {\n    this.geometry = this.getLineGeometry();\n\n    const material = new THREE.LineBasicMaterial({\n      color: appliedColor(this.materialColor),\n      /**\n       * NOTE: linewidth=1: Due to limitations of the OpenGL Core Profile\n       * with the WebGL renderer on most platforms linewidth will always be 1\n       * regardless of the set value.\n       */\n      linewidth: 1\n    });\n\n    const line = new THREE.Line(this.geometry, material);\n\n    return line;\n  }\n\n  updateLineGeometry(): void {\n    this.geometry.verticesNeedUpdate = true;\n    this.render.emit();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeshLineConnectorComponent.html":{"url":"components/MeshLineConnectorComponent.html","title":"component - MeshLineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeshLineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => MeshLineConnectorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-mesh-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                            \n                                    Private\n                                lineMaterial\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                            \n                                    Abstract\n                                createConnectorObject\n                            \n                            \n                                    Protected\n                                getLineGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                animationIncrement\n                            \n                            \n                                depthTest\n                            \n                            \n                                depthWrite\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                transparent\n                            \n                            \n                                source\n                            \n                            \n                                target\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animationIncrement\n                    \n                \n                \n                    \n                        Default value : 0.001\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthTest\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        transparent\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:49\n\n                \n            \n\n\n            \n                \n                    Create line mesh\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineGeometry()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Geometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLineGeometry()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:55\n\n                \n            \n\n\n            \n                \n                    If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            watchObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchObjects()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Geometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lineMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {MeshLine, MeshLineMaterial} from 'three.meshline';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\n\n@Component({\n  selector: 'atft-mesh-line-connector',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => MeshLineConnectorComponent)}],\n  template: ''\n})\nexport class MeshLineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  @Input()\n  transparent = true;\n\n  @Input()\n  opacity = 0.5;\n\n  @Input()\n  lineWidth = 0.5;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  depthTest = true;\n\n  @Input()\n  animated = false;\n\n  @Input() animationIncrement = 0.001;\n\n  private geometry: THREE.Geometry;\n  private line: MeshLine;\n  private lineMaterial: MeshLineMaterial;\n\n\n  createConnectorObject(): THREE.Mesh {\n    this.geometry = this.getLineGeometry();\n\n    this.line = new MeshLine();\n    this.line.setGeometry(this.geometry);\n\n    this.lineMaterial = (this.animated ?\n        new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending,\n          // TODO: props\n          dashArray: 0.05,\n          dashOffset: 0.1,\n          dashRatio: 0.1\n        })\n        : new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending\n        })\n    );\n\n    const mesh = new THREE.Mesh(this.line.geometry, this.lineMaterial);\n    if (this.animated) {\n      this.animate = this.animate.bind(this);\n      this.animate();\n    }\n    return mesh;\n  }\n\n  private animate() {\n    requestAnimationFrame(this.animate);\n    this.lineMaterial.uniforms.dashOffset.value += this.animationIncrement;\n    this.render.emit();\n  }\n\n\n  updateLineGeometry(): void {\n    // https://github.com/spite/THREE.MeshLine/issues/51#issuecomment-379579926\n    this.line.setGeometry(this.geometry);\n    this.render.emit();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeshLineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ObjLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                mtlLoader\n                            \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                texturePath\n                            \n                            \n                                model\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:20\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:28\n\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            lazyObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:22\n\n                            \n                        \n\n                \n                    \n                        This is reference to lazy loaded Object3D (async after init)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parentInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:17\n\n                            \n                        \n\n                \n                    \n                        Flag to signal whether the parent class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjLoaderComponent) }],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private loader = new OBJLoader();\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  @Input()\n  texturePath: string;\n\n  protected async loadLazyObject() {\n    // console.log('ObjLoaderComponent.loadLazyObject');\n    // TODO: make it nicer\n    if (this.material === undefined) {\n      // console.log('ObjLoaderComponent.loadLazyObject without materials');\n      return new Promise((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        },\n          undefined,\n          reject\n        );\n      });\n    } else {\n      // console.log('ObjLoaderComponent.loadLazyObject with materials');\n      return new Promise((resolve, reject) => {\n        if (this.texturePath !== undefined) {\n          this.mtlLoader.setTexturePath(this.texturePath);\n        }\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.loader.setMaterials(materialCreator);\n          this.loader.load(this.model, resolve);\n        });\n      });\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ObjectLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:20\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:28\n\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            lazyObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:22\n\n                            \n                        \n\n                \n                    \n                        This is reference to lazy loaded Object3D (async after init)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parentInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:17\n\n                            \n                        \n\n                \n                    \n                        Flag to signal whether the parent class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef} from '@angular/core';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\n\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjectLoaderComponent) }],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                orbit-controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childCameras\n                            \n                            \n                                    Private\n                                controls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setUpOrbitControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listeningControlElement\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:50\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:43\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:48\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUpOrbitControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpOrbitControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childCameras\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractCamera, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            controls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OrbitControls\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {AbstractCamera} from '../camera/abstract-camera';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: ``,\n  styleUrls: ['orbit-controls.component.scss']\n})\nexport class OrbitControlsComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ContentChildren(AbstractCamera, { descendants: true }) childCameras: QueryList>;\n\n  /**\n   * The element on whose native element the orbit control will listen for mouse events.\n   *\n   * Note that keyboard events are still listened for on the global window object, this is\n   * a known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane:\n   * ```\n   * \n   *   \n   *     ...\n   *   \n   * \n   * ```\n   */\n  @Input() listeningControlElement: ElementRef | undefined = undefined;\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  @Output() render = new EventEmitter();\n\n  private controls: OrbitControls;\n\n  constructor() {\n    // console.log('OrbitControlsComponent.constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the THREE.js OrbitControls are not set up yet, we do not need to update\n    // anything as they will pick the new values from the @Input properties automatically\n    // upon creation.\n    if (!this.controls) {\n      return;\n    }\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    if (changes['listeningControlElement']) {\n      // The DOM element the OrbitControls listen on cannot be changed once an\n      // OrbitControls object is created. We thus need to recreate it.\n      this.controls.dispose();\n      this.setUpOrbitControls();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.controls) {\n      this.controls.dispose();\n    }\n  }\n\n  private setUpOrbitControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.addEventListener('change', () => {\n      this.render.emit();\n    });\n    this.render.emit();\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('OrbitControlsComponent.ngAfterViewInit');\n    if (this.childCameras === undefined || this.childCameras.first === undefined) {\n      throw new Error('Camera is not found');\n    }\n\n    this.setUpOrbitControls();\n  }\n\n}\n\n    \n\n\n    \n                \n                    orbit-controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractCamera, useExisting: forwardRef(() => PerspectiveCameraComponent) }\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createCamera\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPosition()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyZAxisUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyZAxisUp()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport {AbstractCamera} from './abstract-camera';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [{provide: AbstractCamera, useExisting: forwardRef(() => PerspectiveCameraComponent)}],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor() {\n    // console.log('PerspectiveCameraComponent.constructor');\n    super();\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => PlaneMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util/applied-color';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => PlaneMeshComponent)}],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => PointLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => PointLightComponent)}],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SVGLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                overrideMaterialColor\n                            \n                            \n                                model\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:20\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:28\n\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SVGLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            lazyObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:22\n\n                            \n                        \n\n                \n                    \n                        This is reference to lazy loaded Object3D (async after init)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parentInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLazyObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLazyObject3D:17\n\n                            \n                        \n\n                \n                    \n                        Flag to signal whether the parent class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {SVGLoader} from 'three/examples/jsm/loaders/SVGLoader';\n\nimport * as THREE from 'three';\nimport {appliedColor, appliedMaterial} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {scaleToFit} from '../../util/scale-to-fit';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SVGLoaderComponent)}],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n  @Input()\n  overrideMaterialColor: number = undefined;\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = false;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  private loader = new SVGLoader();\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, data => {\n          const paths = data.paths;\n          const group = new THREE.Group();\n\n          for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SceneComponent) }\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                fog\n                            \n                            \n                                fogColor\n                            \n                            \n                                fogFar\n                            \n                            \n                                fogNear\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fog\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogColor\n                    \n                \n                \n                    \n                        Default value : 0xa0a0a0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogFar\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogNear\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {appliedColor} from '../util/applied-color';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SceneComponent)}],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D {\n\n  @Input() background = 0xffffff;\n  @Input() fog = false;\n  @Input() fogColor = 0xa0a0a0;\n  @Input() fogNear = 10;\n  @Input() fogFar = 500;\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    if (this.fog === true) {\n      scene.fog = new THREE.Fog(appliedColor(this.fogColor), this.fogNear, this.fogFar);\n    }\n    return scene;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SphereMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SphereMeshComponent)}],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => TorusMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodes\n                            \n                            \n                                    Private\n                                object\n                            \n                            \n                                viewChilds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Private\n                                applyRotation\n                            \n                            \n                                    Private\n                                applyTranslation\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                listenMouseEvents\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                removeChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:16\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:22\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:9\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:23\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:30\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n                \n                    \n                        Notify parent component, that scene rendering is required\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            applyShadowProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            afterInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:138\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyRotation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            listenMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenMouseEvents(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:95\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractObject3D, {descendants: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewChilds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(AbstractObject3D)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:18\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => TorusMeshComponent) }],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor() {\n    super();\n    // console.log('TorusMeshComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebGLRendererComponent.html":{"url":"components/WebGLRendererComponent.html","title":"component - WebGLRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WebGLRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/webgl-renderer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-webgl-renderer\n            \n\n            \n                styleUrls\n                ./webgl-renderer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webgl-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cameraComponents\n                            \n                            \n                                    Private\n                                canvasRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                onDestroy\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                sceneComponents\n                            \n                            \n                                    Private\n                                selectedObject\n                            \n                            \n                                    Private\n                                viewInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Private\n                                getIntersected\n                            \n                            \n                                    Private\n                                getIntersects\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Private\n                                resize\n                            \n                            \n                                    Private\n                                startRendering\n                            \n                            \n                                    Public\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableRaycaster\n                            \n                            \n                                enableShadowMap\n                            \n                            \n                                renderQueue\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:mousedown\n                            \n                            \n                                window:mousemove\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableRaycaster\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableShadowMap\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderQueue\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:mousedown(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:174\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            window:mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:mousemove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:159\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:123\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getIntersected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIntersected(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Object3D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getIntersects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIntersects(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            startRendering\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startRendering()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cameraComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(AbstractCamera)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Raycaster\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sceneComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(SceneComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:71\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane:\n```\n\n&lt;three-orbit-control [rotateSpeed]=1 [zoomSpeed]=1.2 [listeningControlElement]=mainRenderer.renderPane&gt;\n&lt;three-renderer #mainRenderer&gt;\n...\n\n\n```\n\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/webgl-renderer.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, ElementRef, HostListener, Input, OnDestroy, QueryList, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'atft-webgl-renderer',\n  templateUrl: './webgl-renderer.component.html',\n  styleUrls: ['./webgl-renderer.component.scss']\n})\nexport class WebGLRendererComponent implements AfterViewInit, OnDestroy {\n\n  private renderer: THREE.WebGLRenderer;\n  private viewInitialized = false;\n  private readonly onDestroy = new Subject();\n  private raycaster: THREE.Raycaster;\n  private selectedObject: THREE.Object3D;\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef; // NOTE: say bye-bye to server-side rendering ;)\n\n  @ContentChildren(SceneComponent) sceneComponents: QueryList; // TODO: Multiple scenes\n  @ContentChildren(AbstractCamera) cameraComponents: QueryList>; // TODO: Multiple camera\n\n  @Input()\n  renderQueue: Observable; // TODO: add example of rendering via queue\n\n  @Input()\n  enableRaycaster = false;\n\n  @Input()\n  enableShadowMap = false;\n\n  constructor() {\n    // console.log('RendererComponent.constructor');\n    this.render = this.render.bind(this);\n  }\n\n  ngAfterViewInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.viewInitialized = true;\n    this.startRendering();\n\n    if (this.renderQueue) {\n      // TODO: optimize performance and skip too frequent events in between?\n      this.renderQueue\n        .pipe(takeUntil(this.onDestroy))\n        .subscribe(() => this.render());\n    }\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane:\n   * ```\n   * \n   *   \n   *     ...\n   *   \n   * \n   * ```\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  private startRendering() {\n    // console.log('RendererComponent.startRendering');\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true\n    });\n    this.renderer.setPixelRatio(devicePixelRatio);\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight, false);\n\n    this.renderer.shadowMap.enabled = this.enableShadowMap;\n    this.renderer.shadowMap.autoUpdate = this.enableShadowMap;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    // this.renderer.setClearColor(0xffffff, 1);\n    // this.renderer.autoClear = true;\n\n    this.raycaster = new THREE.Raycaster();\n\n    this.updateChildCamerasAspectRatio();\n    this.render();\n  }\n\n  public render() {\n    // if (this.sceneComponents != undefined && this.sceneComponents.length == 1 &&\n    //     this.cameraComponents != undefined && this.cameraComponents.length == 1) {\n    if (this.viewInitialized) {\n      const sceneComponent = this.sceneComponents.first;\n      const cameraComponent = this.cameraComponents.first;\n      // console.log(\"render\");\n      // console.log(scene.getObject());\n      // console.log(camera.camera);\n      this.renderer.render(sceneComponent.getObject(), cameraComponent.camera);\n    }\n    // }\n  }\n\n  private calculateAspectRatio(): number {\n    const height = this.canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    return this.canvas.clientWidth / this.canvas.clientHeight;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.resize('100px');\n    this.resize('100%');\n  }\n\n  private resize(size: string) {\n    this.canvas.style.width = size;\n    this.canvas.style.height = size;\n    const width = this.canvas.clientWidth;\n    const height = this.canvas.clientHeight;\n\n    this.renderer.setSize(width, height, true);\n    this.updateChildCamerasAspectRatio();\n    this.render();\n  }\n\n  public updateChildCamerasAspectRatio() {\n    const aspect = this.calculateAspectRatio();\n    this.cameraComponents.forEach(camera => camera.updateAspectRatio(aspect));\n  }\n\n  /*\n  @HostListener('document:keypress', ['$event'])\n  public onKeyPress(event: KeyboardEvent) {\n    console.log(\"onKeyPress: \" + event.key);\n  }\n*/\n\n  ngOnDestroy(): void {\n    this.onDestroy.next();\n  }\n\n\n  @HostListener('window:mousemove', ['$event'])\n  public onDocumentMouseMove(event) {\n    const i = this.getIntersected(event);\n    if (i) {\n      if (!this.selectedObject || this.selectedObject !== i) {\n        if (this.selectedObject) {\n          this.selectedObject.dispatchEvent({type: 'mouseExit'});\n          this.selectedObject = null;\n        }\n        this.selectedObject = i;\n        this.selectedObject.dispatchEvent({type: 'mouseEnter'});\n      }\n    }\n  }\n\n  @HostListener('window:mousedown', ['$event'])\n  public onDocumentMouseDown(event) {\n    const i = this.getIntersected(event);\n    if (i) {\n      i.dispatchEvent({type: 'mouseDown'});\n    }\n  }\n\n  private getIntersected(event): THREE.Object3D {\n    if (!this.enableRaycaster) {\n      return;\n    }\n    event.preventDefault();\n    const intersects = this.getIntersects(event.layerX, event.layerY);\n    if (intersects.length > 0) {\n      // TODO: Select parent group by default\n      const res = intersects.filter((i) => {\n        return i && i.object;\n      })[0];\n      if (res && res.object) {\n        return res.object;\n      }\n    }\n    return;\n  }\n\n  private getIntersects(x, y): Array {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    const cameraComponent = this.cameraComponents.first;\n    const sceneComponent = this.sceneComponents.first;\n    this.raycaster.setFromCamera(mouseVector, cameraComponent.camera);\n    const objs = this.raycaster.intersectObject(sceneComponent.getObject(), true);\n    return objs;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./webgl-renderer.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\ncanvas {\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerActorComponent', 'selector': 'atft-server-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WebGLRendererComponent', 'selector': 'atft-webgl-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebGLRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[Unreleased]\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                10 %\n                (6/58)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-actor.component.ts\n            \n            component\n            ServerActorComponent\n            \n                10 %\n                (6/57)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/abstract-camera.ts\n            \n            class\n            AbstractCamera\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n            \n            class\n            AbstractLazyObject3D\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-object-3d.ts\n            \n            class\n            AbstractObject3D\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/abstract-connector.ts\n            \n            class\n            AbstractConnector\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                14 %\n                (5/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n            \n            component\n            MeshLineConnectorComponent\n            \n                11 %\n                (5/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                11 %\n                (3/27)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                11 %\n                (3/26)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                10 %\n                (3/28)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                10 %\n                (3/29)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                10 %\n                (3/28)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                10 %\n                (3/29)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/abstract-model-loader.ts\n            \n            class\n            AbstractModelLoader\n            \n                11 %\n                (4/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                21 %\n                (8/38)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                20 %\n                (7/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                17 %\n                (7/41)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n            \n            class\n            AbstractMesh\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                22 %\n                (9/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                6 %\n                (3/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                8 %\n                (3/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                18 %\n                (7/38)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                8 %\n                (3/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                12 %\n                (5/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                10 %\n                (3/30)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                12 %\n                (6/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/webgl-renderer.component.ts\n            \n            component\n            WebGLRendererComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.6\n        \n            @angular/common : ^8.2.6\n        \n            @angular/compiler : ^8.2.6\n        \n            @angular/core : ^8.2.6\n        \n            @angular/forms : ^8.2.6\n        \n            @angular/platform-browser : ^8.2.6\n        \n            @angular/platform-browser-dynamic : ^8.2.6\n        \n            @angular/router : ^8.2.6\n        \n            @storybook/addon-knobs : ^5.2.0\n        \n            @storybook/addon-options : ^5.2.0\n        \n            core-js : ^3.2.1\n        \n            rxjs : ^6.5.3\n        \n            three : ^0.108.0\n        \n            three.meshline : ^1.2.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material name as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_DataCenterActorModule\n\n\n\ncluster_DataCenterActorModule_declarations\n\n\n\ncluster_DataCenterActorModule_exports\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nWebGLRendererComponent \n\nWebGLRendererComponent \n\nWebGLRendererComponent  -->\n\nAtftRendererModule->WebGLRendererComponent \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nDataCenterActorModule\n\nDataCenterActorModule\n\nDataCenterActorModule -->\n\nAtftModule->DataCenterActorModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nWebGLRendererComponent\n\nWebGLRendererComponent\n\nAtftRendererModule -->\n\nWebGLRendererComponent->AtftRendererModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nDataCenterActorModule -->\n\nLayerActorComponent->DataCenterActorModule\n\n\n\n\n\nServerActorComponent\n\nServerActorComponent\n\nDataCenterActorModule -->\n\nServerActorComponent->DataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerActorComponent \n\nServerActorComponent \n\nServerActorComponent  -->\n\nDataCenterActorModule->ServerActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
